{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/constants/api.constants.ts","webpack:///./src/app/commons/constants/conf.constants.ts","webpack:///./src/app/commons/directives/directives.module.ts","webpack:///./src/app/commons/directives/prevdefault.directive.ts","webpack:///./src/app/commons/forms/feed.forms.ts","webpack:///./src/app/commons/forms/login.forms.ts","webpack:///./src/app/commons/forms/password.forms.ts","webpack:///./src/app/commons/forms/user.forms.ts","webpack:///./src/app/commons/models/add-password.models.ts","webpack:///./src/app/commons/models/edit-password.models.ts","webpack:///./src/app/commons/models/feed.models.ts","webpack:///./src/app/commons/models/history.models.ts","webpack:///./src/app/commons/models/login.models.ts","webpack:///./src/app/commons/models/payroll.models.ts","webpack:///./src/app/commons/models/project-detail.models.ts","webpack:///./src/app/commons/models/user.models.ts","webpack:///./src/app/commons/pipes/getornull.pipe.ts","webpack:///./src/app/commons/pipes/pipes.module.ts","webpack:///./src/app/commons/pipes/pluralize.pipe.ts","webpack:///./src/app/commons/pipes/sanitizeurl.pipe.ts","webpack:///./src/app/commons/pipes/timeformat.pipe.ts","webpack:///./src/app/commons/services/auth/auth.service.ts","webpack:///./src/app/commons/services/auth/server.service.ts","webpack:///./src/app/commons/services/auth/slack.service.ts","webpack:///./src/app/commons/services/auth/user.service.ts","webpack:///./src/app/commons/services/history/standup.service.ts","webpack:///./src/app/commons/services/interceptors/token.service.ts","webpack:///./src/app/commons/services/payroll/payroll.service.ts","webpack:///./src/app/commons/services/project/project.service.ts","webpack:///./src/app/commons/services/users/users.service.ts","webpack:///./src/app/commons/services/utils/breadcrumbs.service.ts","webpack:///./src/app/commons/services/utils/feed.service.ts","webpack:///./src/app/commons/services/utils/nav.service.ts","webpack:///./src/app/commons/utils/app.states.ts","webpack:///./src/app/commons/utils/datetime.utils.ts","webpack:///./src/app/commons/utils/file.utils.ts","webpack:///./src/app/commons/utils/http.utils.ts","webpack:///./src/app/commons/utils/layout.utils.ts","webpack:///./src/app/commons/utils/security.utils.ts","webpack:///./src/app/components/partials/navigation/navigation.component.css","webpack:///./src/app/components/partials/navigation/navigation.component.html","webpack:///./src/app/components/partials/navigation/navigation.component.ts","webpack:///./src/app/components/partials/partials.module.ts","webpack:///./src/app/components/partials/side-menu/side-menu.component.css","webpack:///./src/app/components/partials/side-menu/side-menu.component.html","webpack:///./src/app/components/partials/side-menu/side-menu.component.ts","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.css","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.html","webpack:///./src/app/components/payroll/payroll-list/payroll-list.component.ts","webpack:///./src/app/components/payroll/payroll.module.ts","webpack:///./src/app/components/payroll/payroll.states.ts","webpack:///./src/app/components/payroll/payroll/payroll.component.css","webpack:///./src/app/components/payroll/payroll/payroll.component.html","webpack:///./src/app/components/payroll/payroll/payroll.component.ts","webpack:///./src/app/components/projects/project-detail/project-detail.component.css","webpack:///./src/app/components/projects/project-detail/project-detail.component.html","webpack:///./src/app/components/projects/project-detail/project-detail.component.ts","webpack:///./src/app/components/projects/projects.module.ts","webpack:///./src/app/components/projects/projects.states.ts","webpack:///./src/app/components/projects/projects/projects.component.css","webpack:///./src/app/components/projects/projects/projects.component.html","webpack:///./src/app/components/projects/projects/projects.component.ts","webpack:///./src/app/components/public/login/login.component.css","webpack:///./src/app/components/public/login/login.component.html","webpack:///./src/app/components/public/login/login.component.ts","webpack:///./src/app/components/public/public.module.ts","webpack:///./src/app/components/public/public.states.ts","webpack:///./src/app/components/users/dashboard/calendar/calendar.component.css","webpack:///./src/app/components/users/dashboard/calendar/calendar.component.html","webpack:///./src/app/components/users/dashboard/calendar/calendar.component.ts","webpack:///./src/app/components/users/dashboard/calendar/event-form/event-form.component.css","webpack:///./src/app/components/users/dashboard/calendar/event-form/event-form.component.html","webpack:///./src/app/components/users/dashboard/calendar/event-form/event-form.component.ts","webpack:///./src/app/components/users/dashboard/dashboard.component.css","webpack:///./src/app/components/users/dashboard/dashboard.component.html","webpack:///./src/app/components/users/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.css","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.html","webpack:///./src/app/components/users/dashboard/side-report/side-report.component.ts","webpack:///./src/app/components/users/setting/setting.component.css","webpack:///./src/app/components/users/setting/setting.component.html","webpack:///./src/app/components/users/setting/setting.component.ts","webpack:///./src/app/components/users/users.module.ts","webpack:///./src/app/components/users/users.states.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n\\n\\n\\n<main class=\\\"container-fluid main-container p-0\\\" [ngClass]=\\\"{'container-extended': nav.config.expand}\\\">\\n  <ui-view name=\\\"sidemenu\\\"></ui-view>\\n\\n  <div class=\\\"content-wrapper\\\">\\n\\n    <ui-view name=\\\"navigation\\\"></ui-view>\\n    <ui-view name=\\\"content\\\"></ui-view>\\n    \\n  </div>\\n  \\n  <!-- SIDE MODALS -->\\n\\n  <ui-view name=\\\"sideopen\\\"></ui-view>\\n\\n  <aside class=\\\"search-filter\\\">\\n    <div class=\\\"d-flex justify-content-between mb-3\\\">\\n      <label>Filters</label>\\n      <small class=\\\"text-muted\\\">\\n        <i class=\\\"far fa-circle-notch\\\"></i>\\n        Applying Filters\\n      </small>\\n    </div>\\n    <div class=\\\"mb-5\\\">\\n      <label class=\\\"section-title d-block\\\">Inclusive Dates</label>\\n      <div id=\\\"reportrange\\\" class=\\\"date-range-picker form-control\\\">\\n          <span></span>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"form-check pl-0 mb-5\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n      <label class=\\\"text-medium\\\">Projects</label>\\n      \\n      <ul class=\\\"list-unstyled\\\">\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Current Projects</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Archived Projects</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"pl-3\\\">\\n            <label class=\\\"section-title d-block\\\">Selected Projects</label>\\n            <select class=\\\"selectpicker form-control\\\"  multiple id=\\\"selectProject\\\">\\n              <option>All Projects</option>\\n              <option>Mustard</option>\\n              <option>Ketchup</option>\\n              <option>Relish</option>\\n            </select>\\n\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n    \\n    <div class=\\\"form-check pl-0 pb-5\\\">\\n      <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n      <label class=\\\"text-medium\\\">Task Status</label>\\n      <ul class=\\\"list-unstyled\\\">\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Done</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>To Do</label>\\n          </div>\\n        </li>\\n        <li>\\n          <div class=\\\"form-check\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n            <label>Issues</label>\\n          </div>\\n          <ul class=\\\"list-unstyled\\\">\\n            <li>\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n                <label>Pending</label>\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"\\\" id=\\\"project\\\">\\n                <label>Resolved</label>\\n              </div>\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"d-flex justify-content-center mt-5\\\">\\n      <button class=\\\"btn-light btn mr-4\\\">Clear</button>\\n      <button class=\\\"btn-primary btn filter-toggle\\\">Close</button>\\n    </div>\\n  </aside>\\n  \\n  <!-- SIDE MODALS -->\\n</main>\"","import { Component, OnInit } from '@angular/core';\nimport { NavService } from './commons/services/utils/nav.service';\nimport { ServerService } from './commons/services/auth/server.service';\nimport { UsersService } from './commons/services/users/users.service';\nimport { User } from './commons/models/user.models';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(\n    private nav    : NavService,\n    private server : ServerService,\n    private usersService: UsersService\n  ) {\n    // load server date time\n    server.syncServerDT();\n\n    // fetch all users and store to `UsersService.allUSers`\n    usersService.fetchUsers()\n      .then((data: Array<User>) => {\n        this.usersService.allUsers = data;\n      });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PartialsModule } from './components/partials/partials.module';\nimport { PublicModule } from './components/public/public.module';\nimport { UsersModule } from './components/users/users.module';\nimport { ProjectsModule } from './components/projects/projects.module';\nimport { PayrollModule } from './components/payroll/payroll.module';\n\nimport { TokenService } from './commons/services/interceptors/token.service';\nimport { APP_STATES } from './commons/utils/app.states';\nimport { AppComponent } from './app.component';\n\nimport { DatePipe } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    UIRouterModule.forRoot(APP_STATES),\n    NgbModule.forRoot(),\n    \n    PartialsModule,\n    PublicModule,\n    UsersModule,\n    ProjectsModule,\n    PayrollModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenService, multi: true },\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { urlsafe } from '../utils/http.utils';\n\n/* USERS ENDPOINTS\n */\n\nexport const USERS = '/api/users/';\n\n/* AUTH ENDPOINTS\n */\nexport const AUTH_USER = urlsafe(USERS, 'auth');\nexport const CHANGE_PASSWORD = urlsafe(AUTH_USER, 'password');\nexport const AUTH_LOGIN = urlsafe(AUTH_USER, 'login');\nexport const SERVER_STATUS = urlsafe(AUTH_USER, 'server');\n\n\n/* SLACK AUTH ENDPOINTS\n */\nexport const SLACKAUTH = urlsafe(AUTH_USER, 'slack');\nexport const SLACKAUTH_CONFIG = urlsafe(SLACKAUTH, 'config');\nexport const SLACKAUTH_USER_TOKEN = urlsafe(SLACKAUTH, 'token');\n\n\n/* PAYROLL ENDPOINTS\n */\n\nexport const PAYROLL = '/api/payroll/';\n\n\n// This isn't by definition a \"constant\" url since the id changes, but this will let us\n//   put all the api/endpoints in one place.\nexport const PAYROLL_SEND_PDF = urlsafe(PAYROLL, 'report');\nexport const PAYROLL_REPORT = (id: any) => {return urlsafe(PAYROLL, id, 'report')} \n\n\n/* FEED ENDPOINTS\n */\n\nexport const FEED = '/api/feed/';\n\nexport const FEED_NOTIFICATIONS = urlsafe(FEED, 'notifications');\nexport const FEED_NOTIFICATIONS_EVENTS = urlsafe(FEED_NOTIFICATIONS, 'events');\nexport const FEED_NOTIFICATIONS_PENDING = urlsafe(FEED_NOTIFICATIONS, 'pending');\n\nexport const FEED_CALENDAR = urlsafe(FEED, 'calendar');\nexport const FEED_CALENDAR_EVENTS = urlsafe(FEED_CALENDAR, 'events');\nexport const FEED_CALENDAR_EVENT = (id: any) => urlsafe(FEED_CALENDAR_EVENTS, id);\n\n/* HISTORY ENDPOINTS\n */\n\nexport const HISTORY = '/api/history/';\n\nexport const HISTORY_PROJECT = urlsafe(HISTORY, 'project');\n\nexport const HISTORY_STANDUP = urlsafe(HISTORY, 'standup');\nexport const HISTORY_STANDUP_WEEKLY = urlsafe(HISTORY_STANDUP, 'weekly');\n\n\n/* ACCOUNTING ENDPOINTS\n */\n\nexport const ACCOUNTING = '/api/accounting/';\nexport const ACCOUNTING_PROJECT = urlsafe(ACCOUNTING, 'project');","// TODO: make it dynamic. generate every login. (it looks cool)\n// 18 random characters (alphanumeric + special characters + token)\nexport const AUTH_KEY = 'NCqrSTxQCGMK2wDvRL';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PrevdefaultDirective } from './prevdefault.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [PrevdefaultDirective],\n  declarations: [PrevdefaultDirective]\n})\nexport class DirectivesModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[prevdefault]'\n})\nexport class PrevdefaultDirective {\n\n  constructor(\n    private el: ElementRef\n  ) {}\n\n  @HostListener('click') onClick() {\n    // prevent default to execute\n    return false;\n  }\n\n}\n","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class EventForm {\n  public form: FormGroup;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n     */\n    this.form = new FormBuilder().group({\n      title             : new FormControl(data.title, [Validators.required]),\n      content           : new FormControl(data.content, [Validators.required]),\n      participants_id   : new FormControl(data.participants_id, [Validators.required]),\n      event_date        : new FormControl(data.event_date, [Validators.required]),\n      start_time        : new FormControl(data.start_time, [Validators.required]),\n      end_time          : new FormControl(data.end_time, [Validators.required]),\n      frequency         : new FormControl(data.frequency),\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n  }\n\n  /* DEFAULT VALUE\n   * set the value of the form fields if there is a default value.\n   */\n  defaultValue (d) {\n    // set a timeout just incase that the value is not yet ready.\n    this.form.patchValue(d);\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Login } from '../models/login.models';\n\n\nexport class LoginForm {\n  public form: FormGroup;\n  public err: string = null;\n\n  constructor (data) {\n    /* Initialize the form builder\n    */\n    this.form = new FormBuilder().group({\n      email    : new FormControl(null, [Validators.required, Validators.email]),\n      password : new FormControl(null, [Validators.required])\n    });\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && this.form.get(f).touched);\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && this.form.get(f).touched;\n  }\n\n}","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n// Class for edit password form\nexport class EditPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n  \n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          old_password : new FormControl(null, [Validators.required]),\n          new_password : new FormControl(null, [Validators.required]),\n          confirm_new_password : new FormControl(null, [Validators.required])\n      })\n    }\n  \n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n  \n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }  \n  }\n\n// Class for add password form\nexport class AddPasswordForm {\n    public form: FormGroup;\n    public err: string = null;\n    public submitted: Boolean = false;\n  \n    constructor (data) {\n      /* Initialize the form builder\n       */\n      this.form = new FormBuilder().group({\n          new_password : new FormControl(null, [Validators.required]),\n          confirm_new_password : new FormControl(null, [Validators.required])\n      })\n    }\n  \n    /* Check if form field is valid\n     */\n    valid (f) {\n      return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n    }\n  \n    /* Check if the form field has an error\n     */\n    hasError (f, e) {\n      return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n    }\n  \n    \n  }","import { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\nexport class UserForm {\n  public form: FormGroup;\n  public submitted: Boolean = false;\n\n  constructor (data) {\n    /* Initialize the form builder\n     */\n    this.form = new FormBuilder().group({\n      email        : new FormControl(data.email, [Validators.required, Validators.email]),\n      first_name   : new FormControl(data.first_name, [Validators.required]),\n      last_name    : new FormControl(data.last_name, [Validators.required]),\n      birthdate    : new FormControl(data.birthdate, [Validators.required]),\n      position     : new FormControl(data.position, [Validators.required]),\n      date_started : new FormControl(data.date_started, [Validators.required]),\n    })\n  }\n\n  /* Check if form field is valid\n   */\n  valid (f) {\n    return !(!this.form.get(f).valid && (this.form.get(f).touched || this.submitted));\n  }\n\n  /* Check if the form field has an error\n   */\n  hasError (f, e) {\n    return this.form.get(f).hasError(e) && (this.form.get(f).touched || this.submitted);\n  }\n\n  /* DEFAULT VALUE\n   * set the value of the form fields if there is a default value.\n   */\n  defaultValue (d) {\n    // set a timeout just incase that the value is not yet ready.\n    this.form.patchValue(d);\n  }\n\n}","\n/* Model class for addPassword\n */\nexport class AddPasswordModel {\n    new_password : string = null;\n    confirm_new_password : string = null;\n  \n    constructor(data={}) {\n        Object.assign(this, data);\n    }\n  }","\n/* Model class for editPassword\n */\nexport class EditPasswordModel {\n  old_password : string = null;\n  new_password : string = null;\n  confirm_new_password : string = null;\n\n  constructor(data={}) {\n      Object.assign(this, data);\n  }\n}","export class Feed {\n  instance : Object = {};\n  instance_type : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\nexport class Event {\n  title         : string = null;\n  content       : string = null;\n  participants  : Array<object> = null;\n  event_date    : string = null;\n  start_time    : string = null;\n  end_time      : string = null;\n  frequency     : string = null;\n\n\n  constructor(data = {}) {\n    Object.assign(this, data);\n  }\n}\n","import { User } from './user.models';\n\n\n/* Model class for standup\n */\nexport class Standup {\n  id           : string = null;\n  date_created : string = null;\n  total_hours  : string = null;\n\n  user         : User = new User;\n  project      : Object = {};\n  \n  done         : Object[] = [];\n  todo         : Object[] = [];\n  blockers     : Object[] = [];\n\n  constructor(data={}) {\n      Object.assign(this, data);\n  }\n}","/* Model class for signing in.\n */\nexport class Login {\n  email    : string = null;\n  password : string = null;\n\n  constructor (data={}) { \n    Object.assign(this, data);\n  }\n}","import { User } from './user.models';\n\n\n/* Model class for plan\n */\nexport class Plan {\n  id             : string = null;\n  name           : string = null;\n  amount         : string = null;\n  term           : string = null;\n  monthly_ammort : string = null;\n  payment_count  : string = null;\n  date_from      : string = null;\n  date_to        : string = null;\n  date_created   : string = null;\n  date_updated   : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for deduction\n */\nexport class Deduction {\n  name         : string = null;\n  description  : string = null;\n  tier         : string = null;\n  amount       : string = null;\n  er           : string = null;\n  ee           : string = null;\n  date_created : string = null;\n  date_updated : string = null;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n\n/* Model class for payroll\n */\nexport class Payroll {\n  id              : string = null;\n  user            : User = new User;\n  payroll_code    : string = null;\n  date_from       : string = null;\n  date_to         : string = null;\n  total_deduction : string = null;\n  gross_pay       : string = null;\n  net_pay         : string = null;\n  date_created    : string = null;\n  date_updated    : string = null;\n  is_sent         : boolean = false;\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}\n","/* Model class for project detail.\n */\nexport class ProjectDetail {\n    id              : string = null;\n    name            : string = null;\n    description     : string = null;\n    channel_name    : string = null;\n    date_created    : string = null;\n    date_updated    : string = null;\n    total_hours     : string = null;\n    users           : Object[] = [];\n  \n    constructor (data={}) { \n      Object.assign(this, data);\n    }\n  }","import { Plan, Deduction } from './payroll.models';\n\n/* Model class for user\n */\nexport class User {\n  id            : string = null;\n  email         : string = null;\n  first_name    : string = null;\n  last_name     : string = null;\n  full_name     : string = null;\n  has_usable_pass : boolean = null;\n  birthdate     : string = null;\n  image         : string = null;\n  position      : string = null;\n  position_type : string = null;\n  date_started  : string = null;\n  deductions    : Deduction[] = new Array<Deduction>();\n  plans         : Plan[] = new Array<Plan>();\n\n  constructor(data={}) {\n    Object.assign(this, data);\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getornull'\n})\nexport class GetornullPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    // check if the array is not empty. return\n    // the value of the specified array item based\n    // on it's list.\n    args = args || 0;\n    return value.length > 0 && value.length > args ? value[args].content : \"\";\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimeAgoPipe } from 'time-ago-pipe';\n\nimport { SanitizeurlPipe } from './sanitizeurl.pipe';\nimport { GetornullPipe } from './getornull.pipe';\nimport { PluralizePipe } from './pluralize.pipe';\nimport { TimeformatPipe } from './timeformat.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    SanitizeurlPipe,\n    GetornullPipe,\n    PluralizePipe,\n    TimeAgoPipe,\n    TimeformatPipe\n  ],\n  declarations: [SanitizeurlPipe, GetornullPipe, PluralizePipe, TimeAgoPipe, TimeformatPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pluralize'\n})\nexport class PluralizePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    // pluralize the value if the items\n    // are more than 1.\n    return value.length > 1 ? args ? args: \"s\" : \"\";\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeurl'\n})\nexport class SanitizeurlPipe implements PipeTransform {\n\n  constructor(\n    private sanitizer: DomSanitizer\n  ){}\n\n  transform(url: any, args?: any): any {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeformat'\n})\nexport class TimeformatPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    // transform the value into hour minute format.\n    let hours = parseInt(value);\n\n    if (value % 1 === 0) {\n        return `<span>${hours}H</span>`;\n    }\n    let minutes = (parseInt(value.split(\".\")[1]) * 60) / 100;\n    return `<span>${hours}H<span>&nbsp;</span><span>${minutes}M</span>`;\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_LOGIN, AUTH_USER } from '../../constants/api.constants';\nimport { AUTH_KEY } from '../../constants/conf.constants';\nimport { User } from '../../models/user.models';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public user = new User;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  /* USER LOGIN\n   * @desc : sends a request to the backend server to\n   *         to check for the credentials and returns\n   *         a generated token.\n   */\n  login(creds) {\n    return this.http.post(AUTH_LOGIN, creds)\n      .toPromise()\n      .then(resp => { this.setToken(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n  /* MANAGE USER TOKEN\n   * @desc : manage user token generated from the backend\n   *         to be used on authenticated requests\n   */\n  setToken(token) {\n    // save the generated token to the local storage\n    (<any>window).localStorage[AUTH_KEY] = JSON.stringify(token);\n    return;\n  }\n\n  getToken() {\n    // fetch the generated token from the storage\n    let d = (<any>window).localStorage[AUTH_KEY];\n    if (!d) return null;\n\n    return JSON.parse(d);\n  }\n\n  rmToken() {\n    // clear the token from the local storage.\n    (<any>window).localStorage.removeItem(AUTH_KEY);\n  }\n\n\n  /* MANAGE USER INSTANCE\n   * @desc : manage user instance.\n   */\n  authenticated() {\n    // check if the user is authenticated\n    return this.getToken() ? true : false;\n  }\n\n  setuser() {\n    // save the user's instance\n    return this.http.get(AUTH_USER)\n      .toPromise()\n      .then(resp => { this.user=new User(resp); })\n    ;\n  }\n\n  getuser() {\n    // fetch the user instance\n    if (this.user.id == null) {\n      // sends a request from the backend to\n      // get the data.\n      this.setuser();\n    }\n    return this.user;\n  }\n}\n","import { interval, Observable } from 'rxjs';  \nimport { map, share } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SERVER_STATUS } from '../../constants/api.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  // current date and time observable.\n  public currentdt: Observable<Date>;\n  public now = new Date();\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  /* SERVER STATUS\n   * @desc : retrieve the server date time and status\n   */\n  getStatus() {\n    return this.http.get(SERVER_STATUS)\n      .toPromise()\n      .then(resp => {\n        // TODO: sync the server datetime and the current dt.\n        let serverdt = new Date(resp['datetime']);\n\n        // sync the datetime of the server and\n        // the frontend service.\n        this.currentdt = interval(1000).pipe(\n          map(tick => new Date()), share()\n        );\n      });\n  }\n\n  _getCurrenDT(): Observable<Date> {\n    return this.currentdt;\n  }\n\n  async syncServerDT() {\n    // send a request to the backend server to get\n    // the current date and time.\n    // Note: `await` makes it synchronous.\n    await this.getStatus();\n\n    // sync to the current datetime.\n    this._getCurrenDT().subscribe(resp => {\n      this.now = new Date(resp);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe } from '../../utils/http.utils'\nimport { SLACKAUTH_CONFIG, SLACKAUTH_USER_TOKEN } from '../../constants/api.constants';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SlackService {\n  public config;\n\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService\n  ) { }\n\n  /* SLACK CONFIG\n   * @desc : returns the slack auth configuration\n   *         set from the backend.\n   */\n  getConfig() {\n    return this.http.get(SLACKAUTH_CONFIG)\n      .toPromise()\n      .then(resp => { this.config=resp; return resp; })\n    ;\n  }\n\n  /* USER TOKEN\n   * @desc : Get user token using the slack token\n   */\n  getUserToken(slackToken) {\n    return this.http.get(urlsafe(SLACKAUTH_USER_TOKEN, slackToken))\n      .toPromise()\n      .then(resp => { this.auth.setToken(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AUTH_USER, CHANGE_PASSWORD } from '../../constants/api.constants';\nimport { User } from '../../models/user.models';\n\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private auth: AuthService,\n    private http: HttpClient\n  ) { }\n\n\n  /* USER UPDATE\n   * @desc : sends a request to the backend server to update\n   *         the user's information.\n   */\n  update(data) {\n    return this.http.post(AUTH_USER, data)\n      .toPromise()\n      .then(resp => { this.auth.user = new User(resp); return resp; })\n      .catch(err => { return Promise.reject(err); })\n    ;\n  }\n\n  updatePassword(data){\n    return this.http.put(CHANGE_PASSWORD, data)\n      .toPromise()\n      .then(resp => { return resp; } )\n      .catch(err => { return Promise.reject(err); })\n  }\n\n  addPassword(data){\n    return this.http.post(CHANGE_PASSWORD, data)\n      .toPromise()\n      .then(resp => { return resp; } )\n      .catch(err => { return Promise.reject(err); })\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe, queryparams } from '../../utils/http.utils';\nimport { HISTORY_STANDUP, HISTORY_STANDUP_WEEKLY } from '../../constants/api.constants';\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConvertFromNgbDate } from '../../utils/datetime.utils'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StandupService {\n\n  // contains the list of weekly reports\n  public q = [];\n  // boolean to check if currently getting new weekly report\n  public fetching = false;\n  // boolean to check if all data are loaded\n  public allLoaded = false;\n  // boolean to check if api not done loading\n  public resultsLoaded = true;\n  // url parameter for the next page\n  public qparams = {\n    page: 1\n  };\n  // set so that when side panel is called it will not reload all data\n  public noreload = false;\n\n  public scrollHeight:number;\n\n  dateData:any = {\n    'dateStart':Date.now(),\n    'dateEnd':Date.now()\n  };\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getWeeklyReport(id) {\n    // toggle fetching to true to prevent multiple\n    // similar request to overload the server.\n    this.fetching = true;\n    this.resultsLoaded = false;\n    // set string date format\n    let weekStart = `${this.dateData.dateStart.getFullYear()}-${(this.dateData.dateStart.getMonth() + 1)}-${this.dateData.dateStart.getDate()}`\n    let weekEnd = `${this.dateData.dateEnd.getFullYear()}-${(this.dateData.dateEnd.getMonth() + 1)}-${this.dateData.dateEnd.getDate()}`\n    // add url params\n    let url = `${HISTORY_STANDUP_WEEKLY}${queryparams(this.qparams)}&date_start=${weekStart}&date_end=${weekEnd}&project_id=${id}`\n\n    //this.http.get(urlsafe(url, weekStart) + queryparams(this.qparams))\n    this.http.get(url)\n      .toPromise()\n      .then(resp => {\n          // append the new data to the current data list.\n          this.q = _.concat(this.q, resp['results']);\n\n          // reset the fetching to false.\n          this.fetching = false;\n          this.resultsLoaded = true;\n          // check if this request is the last request. by\n          // checking if there is no value for the `next` attribute,\n          // we will know that all the data are loaded.\n          if(!resp['next']) { this.allLoaded = true; }\n      })\n    ;\n  }\n\n  loadMoreWeeklyReport(id) {\n    // check if all the data are loaded.\n    if (!this.allLoaded && !this.fetching) {\n      // update the page number so that this will fetch\n      // the next batch instead of the current one.\n      // TODO: Add a checker if the the page_number is more than\n      // the maximum page count.\n      this.qparams.page++;\n\n      // fetch weekly report items.\n      this.getWeeklyReport(id);\n    }\n  }\n\n  revertWeeklyReport(){\n    // remove all saved weekly report\n    this.q = []\n    // reset page parameter to page 1\n    this.qparams.page = 1\n    // reset all loaded boolean to allow user to scroll\n    this.allLoaded = false\n  }\n\n  setDateData(startDate:NgbDate, endDate:NgbDate){\n    // set date start and date end\n    // convert start and end date from NgbDate into Date format\n    this.dateData.dateStart = ConvertFromNgbDate(startDate);\n    this.dateData.dateEnd = ConvertFromNgbDate(endDate);\n  }\n\n  getReport(id) {\n    return this.http.get(urlsafe(HISTORY_STANDUP, id));\n  }\n\n  getReportList() {\n    return this.http.get(HISTORY_STANDUP);\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { StateService } from '@uirouter/angular';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService\n  ) { }\n\n  intercept (r: HttpRequest<any>, n: HttpHandler) : Observable <HttpEvent <any>> {\n    let req = r.clone({\n      headers: r.headers.set('Authorization', this.token())\n    });\n\n    return n.handle(req).pipe(tap(\n      resp => {\n        if (resp instanceof HttpResponse) return resp;\n      }\n    ));\n  }\n\n  // Get user token from the local storage\n  // and format if to be placed into the request header.\n  token () {\n    const t = _.get(this.auth.getToken(), ['token'], null);\n    return `Token ${t}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe, queryparams } from '../../utils/http.utils';\nimport { PAYROLL, PAYROLL_REPORT, PAYROLL_SEND_PDF } from '../../constants/api.constants';\nimport { Payroll } from '../../../commons/models/payroll.models';\n\nimport { downloadFileHanlder } from '../../utils/file.utils';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayrollService {\n  public plist : any = [];\n  public selectedPayroll = new Map<string,Payroll>();\n  public payroll = new Payroll;\n\n  constructor(\n    private http           : HttpClient,\n    private payrollservice : PayrollService\n  ) { }\n\n  /* Payroll detail\n   */\n  detail(id) {\n    return this.http.get(urlsafe(PAYROLL, id));\n  }\n\n  /* Payroll list\n   */\n  list(params={}) {\n    return this.http.get(PAYROLL + queryparams(params));\n  }\n\n  getList() {\n    this.list()\n      .subscribe(resp=>{ this.plist = resp; });\n  }\n\n  downloadPDF(id, fileName = \"default\"){\n    /* Automatically download the pdf \n    */\n\n   // instead of using a simple redirection to download the request.\n   //  Use a get request so that the inteceptors can catch it and attach token. \n   this.http.get(PAYROLL_REPORT(id), { responseType: 'blob'})\n     .subscribe(\n       data => { downloadFileHanlder(data, fileName) }\n     )\n  }\n  \n  sendPayrollReport(data){\n    return this.http.post(PAYROLL_SEND_PDF, data)\n    .toPromise()\n    .then(resp => { return resp; })\n    .catch(err => { return Promise.reject(err); });\n  }\n} \n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { urlsafe } from '../../utils/http.utils';\nimport { ACCOUNTING_PROJECT, HISTORY_PROJECT} from '../../constants/api.constants';\n\nimport { ProjectDetail } from '../../../commons/models/project-detail.models';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  \n  // contains the project blockers\n  public ProjectBlockers:any = [];\n  // contains the project detail\n  public projectDetail = new ProjectDetail;\n  // contains all projects\n  public projects:any = [];\n\n  getProjects(){\n    return this.http.get(ACCOUNTING_PROJECT)\n  }\n\n  getProjectDetail(id){\n    return this.http.get(urlsafe(ACCOUNTING_PROJECT, id))\n  }\n\n  getProjectBlockers(id){\n    let url = urlsafe(HISTORY_PROJECT, id)\n\n    this.http.get(urlsafe(url, 'blockers')).subscribe(\n      data => {\n        // get all blockers in opened project\n        this.ProjectBlockers = data\n      }\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { USERS } from '../../constants/api.constants';\nimport { User } from '../../models/user.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  allUsers: Array<User>;\n\n  constructor(private http: HttpClient) { }\n\n  fetchUsers(): Promise<Array<User>> {\n    return this.http.get<Array<User>>(USERS)\n      .toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbsService {\n\n  public breadcrumb : Object = [{\n    title  : null,\n    path : null,\n  }];\n\n  constructor() { }\n\n  setBreadCrumbs(crumbs) {\n    this.breadcrumb = crumbs\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { queryparams } from '../../utils/http.utils';\n\nimport { Feed } from '../../models/feed.models';\nimport {\n  FEED,\n  FEED_NOTIFICATIONS_EVENTS,\n  FEED_NOTIFICATIONS_PENDING,\n  FEED_CALENDAR_EVENTS,\n  FEED_CALENDAR_EVENT\n} from '../../constants/api.constants';\nimport { ServerService } from '../auth/server.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n  public q = [];\n  public nEvents: any;\n  public pendingIssues: any;\n\n  public scrollHeight:number;\n\n  // toggle checker that is used to check if there is\n  // a pending request to the backend. This prevents\n  // the system from sending spam requests to the backend.\n  public fetching = false;\n\n  // toggle checker that is used to check if the feed list\n  // should be reloaded or not. there are pages/components\n  // which the list shouldn't be reloaded. (dashboard-report,\n  // feed-search, feed-filter).\n  public noreload = false;\n\n  // checker that will know if all the data is loaded\n  // in the frontend.\n  public all_loaded = false;\n\n  // this query params object is used for filtering and searching feature.\n  // ADD your filter parameters in here. PAGINATION and QUERIES are\n  // always binded to each other. DO NOT SEPARATE this functionalities\n  public qparams = {\n    page: 1\n  };\n\n  constructor(\n    private http: HttpClient,\n    private server: ServerService\n  ) { }\n\n  get yearNow() {\n    return String(this.server.now.getFullYear());\n  }\n\n  getFeed() {\n    // toggle fetching to true to prevent multiple\n    // similar request to overload the server.\n    this.fetching = true;\n\n    this.http.get(FEED + queryparams(this.qparams))\n      .toPromise()\n      .then(resp => {\n          // append the new data to the current data list.\n          this.q = _.concat(this.q, resp['results']);\n\n          // reset the fetching to false.\n          this.fetching = false;\n\n          // check if this request is the last request. by\n          // checking if there is no value for the `next` attribute,\n          // we will know that all the data are loaded.\n          if(!resp['next']) { this.all_loaded = true; }\n      })\n    ;\n  }\n\n  loadMoreFeed() {\n    // check if all the data are loaded.\n    if (!this.all_loaded && !this.fetching) {\n      // update the page number so that this will fetch\n      // the next batch instead of the current one.\n      // TODO: Add a checker if the the page_number is more than\n      // the maximum page count.\n      this.qparams.page++;\n\n      // fetch feed items.\n      this.getFeed();\n    }\n    else {\n      console.log('all data are loaded');\n    }\n  }\n\n  getNotificationEvents() {\n    return this.http.get(FEED_NOTIFICATIONS_EVENTS)\n      .toPromise()\n      .then(resp => {\n        this.nEvents = resp;\n      });\n  }\n\n  getNotificationPendingIssues() {\n    return this.http.get(FEED_NOTIFICATIONS_PENDING)\n      .toPromise()\n      .then(resp => {\n        this.pendingIssues = resp;\n      });\n  }\n\n  getCalendarEvents(year = this.yearNow) {\n    return this.http.get(\n      FEED_CALENDAR_EVENTS,\n      { params: { year } }\n    )\n      .toPromise();\n  }\n\n  addEvent(value) {\n    return this.http.post(FEED_CALENDAR_EVENTS, value)\n      .toPromise();\n  }\n\n  updateEvent(value, eventID) {\n    return this.http.put(FEED_CALENDAR_EVENT(eventID), value)\n      .toPromise();\n  }\n\n  deleteEvent(value, eventID) {\n    return this.http.delete(FEED_CALENDAR_EVENT(eventID), value)\n      .toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavService {\n\n  public config : Object = {\n    title  : null,\n    expand : false\n  };\n\n  constructor() { }\n\n  setNav(title, expand=false, noClass=false) {\n    this.config = Object({\n      title: title, expand: expand, noClass: noClass\n    });\n  }\n}\n","import { PUBLIC_STATES } from '../../components/public/public.states';\nimport { USER_STATES } from '../../components/users/users.states';\nimport { PROJECTS_STATES } from '../../components/projects/projects.states';\nimport { PAYROLL_STATES } from '../../components/payroll/payroll.states';\n\n\nexport const APP_STATES = {\n  otherwise : '/',\n  states    : [].concat(\n    PUBLIC_STATES, USER_STATES, PROJECTS_STATES, PAYROLL_STATES)\n}","import * as _ from 'lodash';\n\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap';\n\nexport function DateRange (date:Date = new Date) {\n    var dt = date;\n    var currentWeekDay = dt.getDay();\n\n    var lessDays = currentWeekDay == 0 ? 6 : currentWeekDay - 1;\n\n    // get the start of the week date\n    var wkStart = new Date(new Date(dt).setDate(dt.getDate() - lessDays));\n    // get the end of the week date\n    var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6));\n\n    var dateRange = {\n        'dateStart': wkStart,\n        'dateEnd': wkEnd\n    }\n    return dateRange\n}\n\nexport function GetPreviousDate(date:Date, interval:number){\n    // get the previous date based on the given interval\n    let intervalDate = new Date(new Date(date).setDate(date.getDate() - interval))\n\n    return intervalDate\n}\n\nexport function GetMonthFirstLastDate(date:Date, interval:number){\n    // get the previous month based on the given interval\n    var intervalDate = new Date(new Date(date).setMonth(date.getMonth() - interval))\n\n    // compute the first and last day of the month\n    var firstOfMonth = new Date(intervalDate.getFullYear(), intervalDate.getMonth(), 1);\n    var lastOfMonth = new Date(intervalDate.getFullYear(), intervalDate.getMonth()+1, 0);\n\n    var MonthFirstLastDate = { \n        'firstOfMonth':firstOfMonth, \n        'lastOfMonth':lastOfMonth \n    }\n\n    return MonthFirstLastDate\n}\n\nexport function ConvertFromNgbDate(date:NgbDate){\n    // convert NgbDate into Date\n    return new Date(date.year, date.month-1, date.day);\n}","/* \n    File handler utils.\n */\n\n\n /* \n    downloadPDFHanlder: Gets the blob from a request and\n        downloads it.\n */\nexport function downloadFileHanlder(file: Blob, fileName: string){\n\n    // Attach the blob to an anchor\n    var anchhor = document.createElement(\"a\");\n    anchhor.href = URL.createObjectURL(file);\n\n    // Define anchor as a downlodable type and click it.\n    anchhor.download = fileName;\n    anchhor.click();\n\n } ","/* Re-format the URL parameters for\n * readbility\n */\nexport function urlsafe (url, ...params) {\n    return url.concat(params.join(\"/\"), '/');\n}\n\nexport function queryparams (data) {\n  return \"?\" + Object.keys(data).map(key => `${key}=${encodeURIComponent(data[key])}`).join('&');\n}","import { NavigationComponent } from '../../components/partials/navigation/navigation.component';\nimport { SideMenuComponent } from '../../components/partials/side-menu/side-menu.component';\n\n\nexport function ContentOnly (content) {\n  return { content : content };\n}\n\nexport function NavContent (content) {\n  return {\n    sidemenu   : SideMenuComponent,\n    navigation : NavigationComponent,\n    content    : content\n  };\n}\n\nexport function NavSideOpenContent (content, BackgroundContent) {\n  return {\n    sidemenu   : SideMenuComponent,\n    navigation : NavigationComponent,\n    content    : BackgroundContent,\n    sideopen   : content\n  }\n}","import * as _ from 'lodash';\n\nimport { AuthService } from '../services/auth/auth.service';\nimport { SlackService } from '../services/auth/slack.service';\nimport { PayrollService } from '../services/payroll/payroll.service';\n\n\n/* LOGIN REQUIRED\n * @desc : callback function that will check and will not pass\n *         users that are not logged in.\n */\nexport function LoginRequired(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n}\n\n\n/* DISCONNECT\n * @desc : callback function that will log user out.\n *         (removes/clear the user token)\n */\nexport function Disconnect(t) {\n  let auth = t.injector().get(AuthService),\n      state = t.router.stateService;\n\n  if(auth.authenticated()) auth.rmToken();\n  return state.target('login');\n}\n\n\n/* PAYROLL REDIRECT\n */\nexport async function PayrollRedirect(t) {\n  let auth = t.injector().get(AuthService),\n      payroll = t.injector().get(PayrollService),\n      state = t.router.stateService;\n\n  if(!auth.authenticated()) return state.target('login');\n\n  // check if `payroll.plist` is not empty, redirect\n  // the user to the first instance. If empty, get the\n  // list from the backend and redirect to the first\n  // instance.\n  if(_.isEmpty(payroll.plist)) {\n    // TODO: improve this part. it looks good but messy.\n    // `payroll.plist` shouldn't be assigned in this function\n    await payroll.list()\n      .toPromise()\n      .then(resp=>{ payroll.plist = resp; return resp; });\n  }\n\n  if(payroll.plist.length !== 0) {\n    return state.target('payroll-detail', {id: payroll.plist[0].id});\n  }\n}\n\n\n/* SLACK LOGIN REDIRECT\n * @desc : callback receiver for requests coming from\n *         slack server.\n */\nexport async function SlackAuthRedirect(t, $state) {\n  let auth = t.injector().get(AuthService),\n      slack = t.injector().get(SlackService),\n      state = t.router.stateService,\n      token = t._targetState._params.token;\n\n  if (token) {\n    // validate if the access token is valid. retrieve\n    // the user token from the backend and redirect\n    // the user to the dashboard.\n    await slack.getUserToken(token);\n    // token is invalid or other error.\n    //if(!auth.authenticated()) return state.target('login');\n\n    return state.target('dashboard');\n  }\n\n  return state.target('login');\n}\n\n\n\n\n","module.exports = \".breadcrumb{\\n    background-color: #fdfdfe\\n}\"","module.exports = \"<nav class=\\\"center-nav\\\">\\n  <div class=\\\"d-flex justify-content-between w-100\\\">\\n    <h2 *ngIf=\\\"!nav.config.noClass\\\" class=\\\"section-title\\\">{{ nav.config.title }}</h2>\\n\\n    <ol *ngIf=\\\"nav.config.noClass\\\" class=\\\"breadcrumb\\\">\\n        <li *ngFor=\\\"let crumb of crumbs.breadcrumb\\\" class=\\\"breadcrumb-item\\\">\\n          <a uiSref=\\\"{{crumb.path}}\\\" class=\\\"h6\\\">{{ crumb.title }}</a>\\n        </li>\\n    </ol>\\n\\n    <div class=\\\"search-input input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text filter-toggle\\\">Show Filters</span>\\n      </div>\\n      <input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search anything\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <span class=\\\"input-group-text\\\">\\n          <a href=\\\"\\\" class=\\\"filter-toggle\\\">\\n            <i class=\\\"fal fa-search ml-1\\\"></i>\\n          </a>\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"profile-dropdown\\\" ngbDropdown>\\n    <div class=\\\"profile-info\\\">\\n      <p>{{ auth.user.first_name }} {{ auth.user.last_name }}</p>\\n      <span>{{ auth.user.position }}</span>\\n    </div>\\n    <a href=\\\"\\\" prevdefault ngbDropdownToggle>\\n      <div class=\\\"avatar-sm\\\" [ngStyle]=\\\"{'background-image': 'url(' + auth.user.image + ')'}\\\"></div>\\n    </a>\\n    <div ngbDropdownMenu>\\n      <a uiSref=\\\"user-settings\\\" class=\\\"dropdown-item\\\">\\n        <i class=\\\"far fa-cog\\\"></i>\\n        <span>\\n          Account Settings\\n          <small class=\\\"text-muted\\\">{{ auth.user.email }}</small>\\n        </span>\\n      </a>\\n      <a uiSref=\\\"logout\\\" class=\\\"dropdown-item\\\">\\n        <i class=\\\"far fa-arrow-alt-right\\\"></i>\\n        Log out\\n      </a>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { NavService } from '../../../commons/services/utils/nav.service';\nimport { BreadcrumbsService } from '../../../commons/services/utils/breadcrumbs.service'\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(\n    private bconfig : NgbDropdownConfig,\n    private auth    : AuthService,\n    private nav     : NavService,\n    private crumbs  : BreadcrumbsService\n  ) {\n    bconfig.placement = 'bottom-right';\n  }\n\n  ngOnInit() {\n    this.auth.getuser();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\nimport { DirectivesModule } from '../../commons/directives/directives.module';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule,\n    DirectivesModule\n  ],\n  declarations: [NavigationComponent, SideMenuComponent]\n})\nexport class PartialsModule { }\n","module.exports = \"\"","module.exports = \"<aside class=\\\"side-menu\\\">\\n  <div class=\\\"brand\\\">\\n    <a href=\\\"index.html\\\">\\n      <img src=\\\"/static/images/logo.png\\\"\\n           srcset=\\\"/static/images/logo@2x.png 2x,\\n                   /static/images/logo@3x.png 3x\\\"\\n           class=\\\"logo\\\">\\n    </a>\\n  </div>\\n  <nav>\\n    <ul class=\\\"list-unstyled\\\">\\n      <li>\\n        <a uiSref=\\\"dashboard\\\" [ngClass]=\\\"{active: state.includes('dashboard') || state.includes('dashboard-report')}\\\">\\n          <i class=\\\"fal fa-gem\\\"></i>\\n          Dashboard\\n        </a>\\n      </li>\\n      <li>\\n        <a uiSref=\\\"\\\">\\n          <i class=\\\"fal fa-inbox\\\"></i>\\n          Inbox\\n        </a>\\n        <span class=\\\"count\\\">1</span>\\n      </li>\\n      <li>\\n      \\n        <a uiSref=\\\"projects\\\" [ngClass]=\\\"{active: state.includes('projects') || state.includes('project-detail')|| state.includes('project-detail-report')}\\\">\\n          <i class=\\\"fal fa-paste\\\"></i>\\n          Projects\\n        </a>\\n      </li>\\n      <li>\\n        <a uiSref=\\\"payroll\\\" [ngClass]=\\\"{active: state.includes('payroll-detail')}\\\">\\n          <i class=\\\"fal fa-gift\\\"></i>\\n          Payroll\\n        </a>\\n      </li>\\n    </ul>\\n  </nav>\\n</aside>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor(\n    private state: StateService\n  ) { }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"payslip-list\\\">\\n\\n  <div class=\\\"d-flex align-items-center justify-content-between mb-4\\\">\\n    <h5 class=\\\"subtitle mb-0\\\">All Pay slips</h5>\\n    <div class=\\\"feed-data-options \\\">\\n      <button class=\\\"btn btn-sm mr-2\\\" (click)=\\\"downloadPDF()\\\" >\\n        <i class=\\\"fas fa-download\\\"></i>\\n      </button>\\n      <button class=\\\"btn btn-sm\\\" (click)=\\\"sendPDF()\\\">\\n        <i class=\\\"fas fa-arrow-alt-from-left\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"nav-list-style-1\\\">\\n    <p class=\\\"text-center text-muted\\\" *ngIf=\\\"payrollservice.plist.length === 0\\\">No Pay slips available.</p>\\n    <div *ngFor=\\\"let p of payrollservice.plist\\\">\\n      <a uiSref=\\\"payroll-detail\\\" [uiParams]=\\\"{id:p.id}\\\" uiSrefActive=\\\"active\\\" >\\n        <div class=\\\"nav-list-item d-flex justify-content-between align-items-start p-3\\\">\\n          <div class=\\\"d-flex align-items-center\\\" >\\n              <input *ngIf=\\\"payrollservice.selectedPayroll.has(p.id)\\\" type=\\\"checkbox\\\" name=\\\"\\\" class=\\\"mr-3 inputcheck\\\" (click)=\\\"onToggle($event, p)\\\" checked>\\n              <input *ngIf=\\\"!payrollservice.selectedPayroll.has(p.id)\\\" type=\\\"checkbox\\\" name=\\\"\\\" class=\\\"mr-3 inputcheck\\\" (click)=\\\"onToggle($event, p)\\\" >\\n            <div class=\\\"\\\">\\n              <h6 class=\\\"section-title mb-1\\\">{{ p.payroll_code }}</h6>\\n              <small class=\\\"text-muted\\\">{{ p.date_created | date: '(EEE) MMM d, y' }}</small>\\n            </div>\\n          </div>\\n          <div class=\\\"text-right\\\">\\n            <p class=\\\"mb-1 pane-title\\\">{{ p.date_from | date: 'MMM d' }} - {{ p.date_to | date: 'd y' }}</p>\\n            <p class=\\\"text-primary mb-0\\\" *ngIf=\\\"p.is_sent\\\">Sent</p>\\n            <p class=\\\"text-warning mb-0\\\" *ngIf=\\\"!p.is_sent\\\">Pending</p>\\n          </div>\\n        </div>\\n      </a>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import * as _ from 'lodash';\n\nimport { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { Payroll } from '../../../commons/models/payroll.models';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-payroll-list',\n  templateUrl: './payroll-list.component.html',\n  styleUrls: ['./payroll-list.component.css']\n})\nexport class PayrollListComponent implements OnInit {\n  \n  private payroll = new Payroll;\n  private sending: Boolean = false;\n\n  constructor(\n    private state          : StateService,\n    private auth           : AuthService,\n    private payrollservice : PayrollService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    // get the list of payrolls for the\n    // authenticated user.\n    if(!_.size(this.payrollservice.plist)) {\n      this.payrollservice.getList();\n    }\n  }\n\n  onToggle($event, item){\n    // Function trigger upon checkbox toggle\n    $event.stopPropagation()\n    // Checks if item is already exist in selectedPayroll \n    if(this.payrollservice.selectedPayroll.has(item.id)){\n      // if item is exist. Remove it from mapped data\n      this.payrollservice.selectedPayroll.delete(item.id);\n    }\n    else{\n      // else, add the item to mapped data\n      this.payrollservice.selectedPayroll.set(item.id, item)\n    }\n  }\n\n  downloadPDF(){\n    // loops over each item of the mapped data\n    this.payrollservice.selectedPayroll.forEach((value: Payroll, key: string) => {\n      // get file name\n      const file_name = this.getFileName(value);\n      // call the download functionality with parameters of item id and file name\n      this.payrollservice.downloadPDF(key, file_name);\n    });\n  }\n\n  getFileName(payrollValue){\n    // Constructing the file name for the pdf\n    const employeeName = `p${payrollValue.user.id}_${payrollValue.user.last_name}`;\n    const datePhrase = this.datePipe.transform(`${payrollValue.date_from}`, \"MM-dd-yy\");\n\n    return `${employeeName}_${datePhrase}`;;\n  }\n\n  sendPDF(){\n    // prevent user from doing multiple action\n    // while sending file is not finished\n    if (this.sending != true){\n      // get the selected ids\n      let selectedPayrollId = Array.from( this.payrollservice.selectedPayroll.keys() );\n      // bind sending to true to prevent other action while sending\n      this.sending = true;\n      if (selectedPayrollId.length){\n        this.payrollservice.sendPayrollReport(selectedPayrollId)\n        // upon finish execution bind sendint to false so user can\n        // use sendPDF and downloadPDF\n        .then(resp => { this.sending = false; })\n        .catch(err => { this.sending = false; console.log(err) });\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { PayrollComponent } from './payroll/payroll.component';\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule\n  ],\n  declarations: [PayrollComponent, PayrollListComponent]\n})\nexport class PayrollModule { }\n","import { ContentOnly, NavContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired, PayrollRedirect } from '../../commons/utils/security.utils';\n\nimport { PayrollComponent } from './payroll/payroll.component';\n\n\nexport const PAYROLL_STATES : Object[] = [\n  {\n    name    : 'payroll',\n    url     : '/payroll/',\n    views   : NavContent(PayrollComponent),\n    onEnter : PayrollRedirect\n  },\n  {\n    name    : 'payroll-detail',\n    url     : '/payroll/:id/',\n    views   : NavContent(PayrollComponent),\n    onEnter : LoginRequired\n  }\n]","module.exports = \"\"","module.exports = \"<div class=\\\"center-section\\\">\\n  <div class=\\\"extend-wrapper row\\\">\\n\\n    <section class=\\\"col-md-4\\\">\\n      <app-payroll-list></app-payroll-list>\\n    </section>\\n\\n    <section class=\\\"col-md-8\\\">\\n      <div class=\\\"payslip-preview-container\\\">\\n        <div class=\\\"payslip-preview\\\">\\n          <div class=\\\"d-flex justify-content-between mb-5\\\">\\n            <div>\\n              <img src=\\\"/static/images/logo-2.png\\\" data-rjs=\\\"3\\\">\\n            </div>\\n\\n            <div class=\\\"text-right\\\">\\n              <p class=\\\"subtitle mb-1\\\">Payslip</p>\\n              <h5 class=\\\"title-bold\\\">#{{ payrollservice.payroll.payroll_code }}</h5>\\n            </div>\\n          </div>\\n          <div class=\\\"d-flex justify-content-between mb-5\\\">\\n            <div>\\n              <h3 class=\\\"title-bold mb-1\\\">{{ payrollservice.payroll.user.full_name }}</h3>\\n              <h6 class=\\\"pane-title mb-1\\\">{{ payrollservice.payroll.user.position }}</h6>\\n              <p class=\\\"text-muted\\\">{{ payrollservice.payroll.user.email }}</p>\\n            </div>\\n            <div class=\\\"text-right\\\">\\n              <p class=\\\"text-muted mb-1 small\\\">Pay period</p>\\n              <p class=\\\"title-bold\\\">{{ payrollservice.payroll.date_from | date: 'MMM d' }} - {{ payrollservice.payroll.date_to | date: 'd, y' }}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"salary-breakdown-table\\\">\\n            <div class=\\\"salary-list-item\\\">\\n              <p class=\\\"title-bold\\\">Base Salary</p>\\n              <p>{{ payrollservice.payroll.gross_pay }}</p>\\n            </div>\\n            <div>\\n              <p class=\\\"title-bold\\\">Other Deductions</p>\\n              <ul class=\\\"salary-list-item\\\">\\n                <li  *ngFor=\\\"let benefit of payrollservice.payroll.benefits\\\">\\n                  <p class=\\\"title-bold\\\">{{ benefit.name }}</p>\\n                  <p>{{ benefit.amount | number }}</p>\\n                </li>\\n              </ul>\\n            </div>\\n            <div>\\n              <p class=\\\"title-bold\\\">Benefits</p>\\n              <ul class=\\\"salary-list-item\\\">\\n                <li  *ngFor=\\\"let plan of payrollservice.payroll.plans\\\">\\n                  <p class=\\\"title-bold\\\"> {{ plan.name }}</p>\\n                  <p>{{ plan.amount | number }}</p>\\n                </li>\\n              </ul>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"summary\\\">\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <p class=\\\"title-bold\\\">Total Deductions</p>\\n                <p>{{ payrollservice.payroll.total_deduction }}</p>\\n              </div>\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <p class=\\\"title-bold\\\">Subtotal</p>\\n                <p>{{ payrollservice.payroll.net_pay }}</p>\\n              </div>\\n          </div>\\n          <div class=\\\"total\\\">\\n            <p class=\\\"h6 title-bold\\\">Total pay per Period</p>\\n            <h3 class=\\\"title-bold\\\">P{{ payrollservice.payroll.payperiod_amount }}</h3>\\n          </div>\\n          <div class=\\\"payslip-footer d-flex align-items-end justify-content-between\\\">\\n            <div class=\\\"w-50\\\">\\n              <p class=\\\"xsmall\\\">\\n                Door 1, 3rd Floor, Consuelo Building, J.P. Laurel Avenue, Lanang, Davao City, Philippines, 8000\\n              </p>\\n              <p class=\\\"xsmall\\\">\\n                (082) 225 - 1050\\n              </p>\\n            </div>\\n            <p class=\\\"xsmall\\\">\\n                http://swiftkind.com/\\n              </p>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { PayrollService } from '../../../commons/services/payroll/payroll.service';\nimport { NavService } from '../../../commons/services/utils/nav.service';\n\nimport { Payroll } from '../../../commons/models/payroll.models';\n\n@Component({\n  selector: 'app-payroll',\n  templateUrl: './payroll.component.html',\n  styleUrls: ['./payroll.component.css']\n})\nexport class PayrollComponent implements OnInit {\n  private payroll = new Payroll;\n  private sendingEmail: boolean = false;\n  private emailCallbackMessage: string = \"\";\n\n  constructor(\n    private state          : StateService,\n    private payrollservice : PayrollService,\n    private nav            : NavService\n  ) {\n    // nav configuration\n    // TODO: this sucks!. find a better solution\n    this.nav.setNav('Payroll', true);\n  }\n\n  ngOnInit() {\n    if(this.state.params.id) {\n      // get payroll details from the backend\n      this.payrollservice.detail(this.state.params.id)\n        .subscribe(resp=>{ this.payrollservice.payroll = new Payroll(resp); }); \n    }\n  }\n\n  getFileName(){\n    // Constructing the file name for the pdf\n    const report_phrase = `${this.payroll.date_from} to ${this.payroll.date_to}`;\n    const date_phrase = `${this.payroll.date_from} to ${this.payroll.date_to}`;\n    const employee_name = `${this.payroll.user.first_name} to ${this.payroll.user.last_name}`;\n    const file_name = `payroll of ${employee_name} ${report_phrase}`;\n    return `payroll of ${employee_name} ${date_phrase}`;;\n  }\n\n  downloadPDF() {\n    const file_name = this.getFileName();\n    this.payrollservice.downloadPDF(this.state.params.id, file_name);\n  }\n\n  sendPDF(){\n    // sendingEmail means that we have to disable the button\n    this.sendingEmail = true;\n    // Reset message if it's still sending\n    this.emailCallbackMessage = \"\";\n    this.payrollservice.sendPayrollReport(this.state.params.id)\n    .then(\n      data => {\n        console.log(data);\n        this.sendPDFGeneralCallback();\n        this.emailCallbackMessage = \"Email is sent sucessfully.\";\n      }\n    )\n    .catch(\n      errors => {\n        console.log(errors);\n        this.sendPDFGeneralCallback();\n        this.emailCallbackMessage = \"Something went wrong in sending the email!\";\n      }\n    )\n  }\n\n  sendPDFGeneralCallback(){\n    // General clean up on call back\n    this.sendingEmail = false;\n  }\n  \n} ","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n\\t<div class=\\\"row ml-3\\\">\\n\\t\\t<section class=\\\"col-md-4\\\">\\n\\t\\t\\t<div class=\\\"d-flex align-items-center mb-2\\\">\\n\\t\\t\\t\\t<a uiSref=\\\"projects\\\" class=\\\"h4\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"far fa-arrow-left mr-3 small\\\"></i>\\n\\t\\t\\t\\t\\t<span><b>Back</b></span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"d-flex align-items-center mb-3\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"projectservice.projectDetail.name\\\" class=\\\"avatar-rectangle mr-3\\\">{{ projectservice.projectDetail.name.charAt(0) }}</div>\\n\\t\\t\\t\\t<h4 class=\\\"title-highlited mb-0\\\">{{ projectservice.projectDetail.name }}</h4>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"mb-3\\\">\\n\\t\\t\\t\\t<label class=\\\"small text-muted\\\">Description</label>\\n\\t\\t\\t\\t<p>{{ projectservice.projectDetail.description }}</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"mb-3\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t\\t<label class=\\\"small text-muted\\\">Date stated</label>\\n\\t\\t\\t\\t\\t\\t<p>{{ projectservice.projectDetail.date_created | date:'mediumDate' }}</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t\\t<label class=\\\"small text-muted\\\">Total hours spent</label>\\n\\t\\t\\t\\t\\t\\t<p>{{projectservice.projectDetail.total_hours}} hours</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"mb-3\\\">\\n\\t\\t\\t\\t<label class=\\\"small text-muted\\\">Pending Issues</label>\\n\\t\\t\\t\\t<p class=\\\"text-danger\\\"> {{projectservice.ProjectBlockers.length}} Issues pending\\n\\t\\t\\t\\t\\t<a href=\\\"\\\" class=\\\"text-danger ml-2\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fal fa-external-link\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"mb-3\\\" *ngIf=\\\"projectservice.projectDetail.users.length\\\">\\n\\t\\t\\t  <div class=\\\"team-members d-flex\\\">\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let user of projectservice.projectDetail.users | slice: 0:5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"avatar-xs\\\" *ngIf=\\\"user.image\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngStyle]=\\\"{'background-image': 'url(' + user.image + ')'}\\\" data-rjs=\\\"3\\\">\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"avatar-xs no-photo-pink mr-3\\\" *ngIf=\\\"!user.image\\\" data-rjs=\\\"3\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ user.first_name.charAt(0) }} {{ user.last_name.charAt(0) }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"avatar-xs more ml-2\\\" *ngIf=\\\"projectservice.projectDetail.users.length > 5\\\">\\n\\t\\t\\t\\t\\t+{{ projectservice.projectDetail.users.length - 5 }}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</section>\\n\\n\\t\\t<section class=\\\"feed-section col-md-7 mt-5\\\">\\n\\t\\t\\t<h5 class=\\\"mb-4 subtitle\\\">Weekly Reports</h5>\\n\\t\\t\\t<div class=\\\"feed-actions\\\">\\n\\t\\t\\t\\t<div class=\\\"date-selector\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"\\\" class=\\\"arrow\\\" (click)=\\\"previousWeek($event)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-long-arrow-alt-left\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<div ngbDropdown autoClose=\\\"outside\\\" class=\\\"date-selected\\\">\\n\\t\\t\\t\\t\\t\\t<div ngbDropdownToggle>\\n\\t\\t\\t\\t\\t\\t\\t{{standupservice.dateData.dateStart | date:'EEE, MMMM d' }} - {{standupservice.dateData.dateEnd | date:'EEE, MMMM d' }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\" autoClose=\\\"false\\\" style=\\\"padding-top: 0px; padding-bottom: 0px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"width: 160px\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"list-group list-group-flush\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByDays($event, 0)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tToday</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByDays($event, 1)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYesterday</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByDays($event,6)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLast 7 Days</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByDays($event,30)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLast 30 Days</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByMonth($event,0)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tThis Month</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"FilterByMonth($event,1)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLast Month</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"list-group-item list-group-item-action\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tCustom Range</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ngb-datepicker #dp (select)=\\\"onDateSelection($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[displayMonths]=\\\"2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[startDate]=\\\"{year: standupservice.dateData.dateStart.getFullYear(), \\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmonth: standupservice.dateData.dateStart.getMonth() + 1}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[dayTemplate]=\\\"t\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[navigation]=\\\"arrows\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[footerTemplate]=\\\"footerTemplate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\toutsideDays=\\\"hidden\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ngb-datepicker>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #t let-date let-focused=\\\"focused\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"custom-day\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.focused]=\\\"focused\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.range]=\\\"isRange(date)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.faded]=\\\"isHovered(date) || isInside(date)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(mouseenter)=\\\"hoveredDate = date\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(mouseleave)=\\\"hoveredDate = null\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ date.day }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<ng-template #footerTemplate>\\n\\t\\t\\t\\t\\t\\t\\t\\t<hr class=\\\"my-0\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary btn-sm m-2 float-right\\\" (click)=\\\"ApplyDateFilter($event)\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!ApplyFilterChange\\\">Apply</button>\\n\\t\\t\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<a href=\\\"\\\" class=\\\"arrow\\\" (click)=\\\"nextWeek($event)\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-long-arrow-alt-right\\\"></i>\\n\\t\\t\\t\\t\\t</a>\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"feed-data-options \\\">\\n\\t\\t\\t\\t\\t<button class=\\\"btn\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-download\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"feed-limited\\\" (scroll)=\\\"scrollWeeklyReport($event)\\\" [scrollTop]=\\\"standupservice.scrollHeight\\\">\\n\\t\\t\\t\\t<p class=\\\"text-center text-muted\\\" *ngIf=\\\"standupservice.q.length === 0\\\">No reports available.</p>\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"feed-card card\\\" *ngFor=\\\"let card of standupservice.q\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-content--container\\\" >\\n\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"report-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a uiSref=\\\"project-detail-report\\\" [uiParams]=\\\"{id: projectservice.projectDetail.id,cardId: card.id}\\\">{{projectservice.projectDetail.name}}</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"badge badge__report\\\">Report</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"timestamp\\\"> {{ card.date_created | date:'MMM d, h:mm a' }}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"feed-summary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"hours badge\\\" [innerHtml]=\\\"card.total_hours | timeformat\\\"></p>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"report-content\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"report-type\\\">Done</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"report-hint\\\">{{ card.done | getornull: \\\"0\\\" }}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"card.done.length > 0\\\" class=\\\"content-count\\\">+{{ card.done.length }}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"report-content\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"report-type\\\">Todo</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"report-hint\\\">{{ card.todo | getornull: \\\"0\\\" }}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"card.done.length > 0\\\" class=\\\"content-count\\\">+{{ card.todo.length }}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"card.blockers.length === 0\\\" class=\\\"no-issue\\\">No Issues</span>\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"card.blockers.length > 0\\\" class=\\\"with-issues\\\">{{ card.pending_issues }} pending issue{{ card.blockers | pluralize }}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"card.blockers.length > 0\\\" class=\\\"details pt-2\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex justify-content-between\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<ol class=\\\"pl-3 details-list\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"issue-details\\\" [ngClass]=\\\"{'resolved': b.is_fixed, 'unresolved': !b.is_fixed}\\\" *ngFor=\\\"let b of card.blockers\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p>{{ b.content }}</p>\\n\\t\\t\\t\\t\\t\\t\\t<a [href]=\\\"b.reference | sanitizeurl\\\" [target]=\\\"_blank\\\"><small>{{ b.reference }}</small></a>\\n\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t</ol>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</section>\\n\\t</div>\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\nimport { StandupService } from '../../../commons/services/history/standup.service'\nimport { NavService } from '../../../commons/services/utils/nav.service';\nimport { ProjectService } from '../../../commons/services/project/project.service'\nimport { BreadcrumbsService } from '../../../commons/services/utils/breadcrumbs.service'\n\nimport { DateRange, GetPreviousDate, GetMonthFirstLastDate, ConvertFromNgbDate } from '../../../commons/utils/datetime.utils'\n\nimport {NgbDate, NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\nimport { ProjectDetail } from '../../../commons/models/project-detail.models';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.css']\n})\nexport class ProjectDetailComponent implements OnInit {\n  \n  // used by bootstrap datetimepicker\n  hoveredDate: NgbDate;\n  fromDate: NgbDate;\n  toDate: NgbDate;\n  // boolean to enable disable apply date filter button\n  ApplyFilterChange:boolean = false;\n\n  constructor(\n    private projectservice : ProjectService,\n    private standupservice : StandupService,\n    private state          : StateService,\n    private nav            : NavService,\n    private calendar       : NgbCalendar,\n    private crumbs         : BreadcrumbsService\n  ) \n  {\n    // nav configuration\n    // TODO: this sucks!. find a better solution\n    this.nav.setNav('Projects/', true, true)\n    this.fromDate = calendar.getToday();\n\n  }\n\n  ngOnInit() {\n    if ((!this.standupservice.noreload && this.state.$current.name !== 'project-detail-report') || \n      (this.state.$current.name === 'project-detail-report' && this.standupservice.q.length < 1)) \n    {\n      // set date range parameters into today\n      this.standupservice.dateData = DateRange();\n      // clear all fields\n      this.standupservice.revertWeeklyReport();\n      // get the project detail\n      this.projectservice.getProjectDetail(this.state.params.id).subscribe(\n        data => {\n          // set the project detail data\n          this.projectservice.projectDetail = new ProjectDetail(data)\n          // set data to be passed for breadcrumbs\n          // list of dictionaries containing title and path\n          let crumb = [{\n            'title': 'Projects',\n            'path': 'projects'\n          },\n          {\n            'title': this.projectservice.projectDetail.name,\n            'path': 'project-detail'\n          }]\n\n          // set bread crumbs\n          this.crumbs.setBreadCrumbs(crumb)\n        }\n      );\n      // get all blockers of project\n      this.projectservice.getProjectBlockers(this.state.params.id);\n      // get all weekly reports\n      this.standupservice.getWeeklyReport(this.state.params.id);\n    }\n    else {\n      // enable reload for template data\n      this.standupservice.noreload = false;\n    }\n  }\n\n  updateWeeklyReport(){\n    // re-initialize Weekly Report data and query parameters\n    this.standupservice.revertWeeklyReport();\n    // get weekly report base on new week\n    this.standupservice.getWeeklyReport(this.state.params.id);\n  }\n\n  previousWeek($event){\n    // prevent default action of href to redirect\n    $event.preventDefault();\n    if(this.standupservice.resultsLoaded){\n      // deduct 1 day to week start date to get previous week\n      this.standupservice.dateData.dateStart.setDate(this.standupservice.dateData.dateStart.getDate() - 1)\n      // apply computations to set new start and end week\n      this.standupservice.dateData = DateRange(this.standupservice.dateData.dateStart)\n\n      this.updateWeeklyReport()\n    }\n  }\n\n  nextWeek($event){\n    // prevent default action of href to redirect\n    $event.preventDefault()\n    if(this.standupservice.resultsLoaded){\n      // add 1 day to week end date to get next week\n      this.standupservice.dateData.dateEnd.setDate(this.standupservice.dateData.dateEnd.getDate() + 1)\n      // apply computations to set new start and end week\n      this.standupservice.dateData = DateRange(this.standupservice.dateData.dateEnd)\n\n      this.updateWeeklyReport()\n    }\n  }\n\n  onDateSelection(date: NgbDate) {\n    // happens when both fromDate and toDate is empty\n    if (!this.fromDate && !this.toDate) {\n      //set fromDate to current date\n      this.fromDate = date;\n    }\n    // check if a fromDate is selected and toDate is still null\n    // afterwards check whether fromDate is after selected date or equals to selected date \n    else if (this.fromDate && !this.toDate && (date.after(this.fromDate) || date.equals(this.fromDate))) {\n      // set toDate to selected date \n      this.toDate = date;\n      // allow user to apply filter\n      this.ApplyFilterChange = true;\n    } else {\n      // if user selects day before from date\n      // set toDate to null\n      this.toDate = null;\n      // set fromDate to selectedDate\n      this.fromDate = date;\n      // do not allow filter, toDate is empty\n      this.ApplyFilterChange = false\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n  }\n\n  isInside(date: NgbDate) {\n    return date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return date.equals(this.fromDate) || date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);\n  }\n\n  ApplyDateFilter($event){\n    if(this.standupservice.resultsLoaded){\n      this.standupservice.setDateData(this.fromDate, this.toDate)\n      // re-initialize Weekly Report data and query parameters\n      this.updateWeeklyReport()\n    }\n  }\n\n  FilterByDays($event, interval){\n    // set initial toDate to Date Today\n    this.toDate = this.calendar.getToday();\n    // get previous date\n    let convertedDate:Date = GetPreviousDate(ConvertFromNgbDate(this.toDate), interval);\n    // convert previous date to NgbDate Format\n    this.fromDate = new NgbDate(convertedDate.getFullYear(), (convertedDate.getMonth() + 1), convertedDate.getDate());\n    // disable aplly filter button\n    this.ApplyFilterChange = false;\n\n    // if interval is 1 or yesterday\n    // we need to set toDate same as the fromDate\n    if(interval == 1)\n    {\n      // set the date data values\n      // to convert NgbDate to Date format\n      this.standupservice.setDateData(this.fromDate, this.fromDate);\n      // set toDate equivalent to fromDate\n      this.toDate = this.fromDate;\n    }\n    // else update only the fromDate\n    else{\n      // set the date data values\n      // to convert NgbDate to Date format\n      this.standupservice.setDateData(this.fromDate, this.toDate);\n    }\n    \n    // re-initialize Weekly Report data and query parameters\n    this.updateWeeklyReport();\n  }\n\n  FilterByMonth($event, interval){\n    // set initial fromDate to Date Today\n    this.fromDate = this.calendar.getToday();\n\n    // get dictionary containing month start date and month end date\n    let monthFirstLastDate = GetMonthFirstLastDate(ConvertFromNgbDate(this.fromDate), interval);\n\n    // set fromDate and toDate values based on monthFirstLastDate values\n    this.fromDate = new NgbDate(monthFirstLastDate.firstOfMonth.getFullYear(), (monthFirstLastDate.firstOfMonth.getMonth() + 1), monthFirstLastDate.firstOfMonth.getDate());\n    this.toDate = new NgbDate(monthFirstLastDate.lastOfMonth.getFullYear(), (monthFirstLastDate.lastOfMonth.getMonth() + 1), monthFirstLastDate.lastOfMonth.getDate());\n    \n    // set the date data values\n    // to convert NgbDate to Date format\n    this.standupservice.setDateData(this.fromDate, this.toDate);\n    // re-initialize Weekly Report data and query parameters\n    this.updateWeeklyReport();\n  }\n\n  @HostListener('scroll', ['$event']) \n  scrollWeeklyReport(event): void {\n    // captures the scroll event on the WeeklyReport-section.\n    // it handles the call to the backend when the scroll\n    // reach its max height.\n    let cHeight = event.target.scrollHeight;\n    this.standupservice.scrollHeight = event.target.scrollTop;\n\n    // offset height. this is the sum of the margin/interval\n    // of each element inside the `cHeight`. can change based\n    // on the design template.\n    // margin-height: 581, spacing-height: 100 # spacer so that this\n    // sends a call to the backend before the user reach the last item.\n    let maxHeight = cHeight - (581 + 100);\n\n    if(this.standupservice.scrollHeight >= maxHeight) {\n      // load more weekly report once target height is reached\n      this.standupservice.loadMoreWeeklyReport(this.state.params.id)\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { PipesModule } from '../../commons/pipes/pipes.module';\n\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    UIRouterModule,\n    PipesModule\n  ],\n  declarations: [ProjectsComponent, ProjectDetailComponent]\n})\nexport class ProjectsModule { }\n","import { ContentOnly, NavContent, NavSideOpenContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectDetailComponent } from './project-detail/project-detail.component';\n\nimport { SideReportComponent } from '../users/dashboard/side-report/side-report.component';\n\n\nexport const PROJECTS_STATES : Object[] = [\n  {\n    name    : 'projects',\n    url     : '/projects/',\n    views   : NavContent(ProjectsComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'project-detail',\n    url     : '/project/:id/',\n    views   : NavContent(ProjectDetailComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'project-detail-report',\n    url     : '/project/:id/report/card/:cardId',\n    views   : NavSideOpenContent(SideReportComponent, ProjectDetailComponent),\n    onEnter : LoginRequired\n  },\n]","module.exports = \"\"","module.exports = \"<div class=\\\"center-section \\\">\\n  <div class=\\\"projects-tab\\\">\\n    <nav class=\\\"project-nav\\\">\\n      <div class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n        <a class=\\\"nav-item active\\\" id=\\\"activeProjects\\\" data-toggle=\\\"tab\\\" href=\\\"#activeProjectslist\\\" role=\\\"tab\\\" aria-controls=\\\"activeProjectslist\\\" aria-selected=\\\"true\\\">Active Projects(4)</a>\\n        <a class=\\\"nav-item \\\" id=\\\"archiveProjects\\\" data-toggle=\\\"tab\\\" aria-controls=\\\"archiveProjectslist\\\" href=\\\"#archiveProjectslist\\\" aria-controls=\\\"archiveProjectslist\\\" aria-selected=\\\"false\\\">Archive (16)</a>\\n      </div>\\n    </nav> \\n    <div class=\\\"tab-content\\\">\\n      <div class=\\\"tab-pane fade show active\\\" id=\\\"activeProjectslist\\\" role=\\\"tabpanel\\\" aria-labelled=\\\"activeProjects\\\">\\n        \\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\" *ngFor=\\\"let project of projectservice.projects\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-pink mr-3\\\">D</div>\\n            <div class=\\\"\\\">\\n              <a uiSref=\\\"project-detail\\\" [uiParams]=\\\"{id:project.id}\\\" uiSrefActive=\\\"active\\\" class=\\\"h5\\\">{{ project.name }}</a>\\n              <p class=\\\"text-muted my-1 small\\\">30 hours of 40/week</p>\\n              <div class=\\\"hour-meter\\\">\\n                <span class=\\\"hour-spent\\\" width=\\\"80%\\\"></span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-pink mr-3\\\">D</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">Designs</a>\\n              <p class=\\\"text-muted my-1 small\\\">30 hours of 40/week</p>\\n              <div class=\\\"hour-meter\\\">\\n                <span class=\\\"hour-spent\\\" width=\\\"80%\\\"></span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-success mr-3\\\">S</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">Saltstack</a>\\n              <p class=\\\"text-muted my-1 small\\\">30 hours of 40/week</p>\\n              <div class=\\\"hour-meter\\\">\\n                <span class=\\\"hour-spent\\\" width=\\\"80%\\\"></span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-primary mr-3\\\">Z</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">Zumbacruise</a>\\n              <p class=\\\"text-muted my-1 small\\\">No activities for the week</p>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"project-item d-flex align-items-start justify-content-between\\\">\\n          <div class=\\\"d-flex align-items-start\\\">\\n            <div class=\\\"avatar-sm no-photo-orange mr-3\\\">H</div>\\n            <div class=\\\"\\\">\\n              <a href=\\\"\\\" class=\\\"h5\\\">HelpDesk</a>\\n              <p class=\\\"text-muted my-1 small\\\">No activities for the week</p>\\n            </div>\\n          </div>\\n          <div class=\\\"team-members d-flex\\\">\\n            <div class=\\\"avatar-xs\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs ml-2\\\" style=\\\"background-image: url('assets/images/tamara-bellis-401355-unsplash.jpg');\\\" data-rjs=\\\"3\\\">\\n            </div>\\n            <div class=\\\"avatar-xs more ml-2\\\">\\n              +7\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"tab-pane fade\\\" id=\\\"archiveProjectslist\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"archiveProjects\\\">\\n        archive\\n      </div>\\n    </div>\\n  </div>\\n\\n  <aside class=\\\"stat-pane overflow-hidden\\\">\\n    <div class=\\\"report-feed report-stream\\\">\\n      <div class=\\\"mb-4 px-4\\\">\\n        <div class=\\\"mb-4 d-flex justify-content-between align-items-center\\\">\\n          <div>\\n            <h5 class=\\\"pane-title mb-0\\\">Report stream</h5>\\n          </div>\\n          <a href=\\\"#\\\" class=\\\"\\\">Filter by date</a>\\n        </div>\\n      </div>\\n      <div class=\\\"month-label\\\">\\n        <span>January 2018</span>\\n      </div>\\n\\n      <div class=\\\"report-items\\\">\\n        <ngb-accordion #a=\\\"ngbAccordion\\\" activeIds=\\\"ngb-panel-0\\\" [destroyOnHide]=\\\"false\\\">\\n        \\n        <ngb-panel *ngFor=\\\"let report of userReportList\\\">\\n          <ng-template ngbPanelHeader let-opened=\\\"opened\\\">\\n            <button class=\\\"btn\\\" [ngClass]=\\\"{'active': opened}\\\" ngbPanelToggle>\\n              <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"report-stream-date text-center\\\">\\n                  <p class=\\\"text-primary mb-0\\\">{{ report.date_created | date:'d' }} </p>\\n                  <small class=\\\"text-muted\\\">{{ report.date_created | date:'E' }} </small>\\n                </div>\\n                <span class=\\\"date-indicator\\\"></span>\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <div class=\\\"mr-5\\\">\\n                    <p class=\\\"mb-0 pane-title\\\">{{report.project.name}}</p>\\n                    <small class=\\\"\\\">No issues</small>\\n                  </div>\\n                  <div class=\\\"text-left\\\">\\n                    <p class=\\\"mb-0 d-block\\\">Total hours: <span>{{report.total_hours}}</span></p>\\n                    <small class=\\\"text-muted\\\">as of {{ report.date_created | date:'shortTime' }} </small>\\n                  </div>\\n                </div>\\n              </div>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template ngbPanelContent>\\n            <div class=\\\"report-table\\\">\\n              <table id=\\\"doneTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">Worked on</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">Hours</th>\\n                  </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let done of report.done\\\">\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        {{ done.content }}\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"{{done.reference}}\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                      <p>{{done.hours}}</p>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"todoTable\\\">\\n                <thead>\\n                  <tr>\\n                    <th width=\\\"80%\\\">To do</th>\\n                    <th width=\\\"10%\\\">Link</th>\\n                    <th width=\\\"10%\\\">&nbsp;</th>\\n                  </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let todo of report.todo\\\">\\n                  <tr>\\n                    <td>\\n                      <p class=\\\"report-name\\\">\\n                        {{todo.content}}\\n                      </p>\\n                    </td>\\n                    <td>\\n                      <a href=\\\"{{todo.reference}}\\\">\\n                        <i class=\\\"fal fa-external-link\\\"></i>\\n                      </a>\\n                    </td>\\n                    <td>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n              <table id=\\\"issuesTable\\\">\\n                \\n                <tbody>\\n                  <tr>\\n                    <p class=\\\"text-muted\\\">No Issues</p>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </ng-template>\\n        </ngb-panel>\\n        </ngb-accordion>\\n      </div>\\n      <!-- <div id=\\\"reportStream\\\" class=\\\"accordion\\\">\\n\\n        <div class=\\\"report-stream-item item-collapse\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report1\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report1\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"\\\">No issues</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse show\\\" id=\\\"report1\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating the service to connect to flask\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Succesfully connecting to aws cognito for login\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Transferring the bootstrap to node modules using npm\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              \\n              <tbody>\\n                <tr>\\n                  <p class=\\\"text-muted\\\">No Issues</p>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"report-stream-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report2\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report2\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"text-danger\\\">1 Pending Issue</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse\\\" id=\\\"report2\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Adding error handling for login page\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Making the data from angular dynamic on login page\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Trying to find a workaround to app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Creating an endpoint to change the user's password. (This is needed so we could use the token that is passed to us)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Find a workaround on app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Issues</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Finding out why the updated server always returns 404 (the aws lambda won't execute the function run specifically the app.run.)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <span class=\\\"issue-status-mark unresolved\\\"></span>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <div class=\\\"report-stream-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#report3\\\" aria-expadend=\\\"true\\\" aria-controls=\\\"report3\\\">\\n          <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"report-stream-date text-center\\\">\\n              <p class=\\\"text-primary mb-0\\\">23</p>\\n              <small class=\\\"text-muted\\\">TUE</small>\\n            </div>\\n            <span class=\\\"date-indicator \\\"></span>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <div class=\\\"mr-5\\\">\\n                <p class=\\\"mb-0 pane-title\\\">Designs</p>\\n                <small class=\\\"\\\">No Issues</small>\\n              </div>\\n              <div class=\\\"text-left\\\">\\n                <p class=\\\"mb-0 d-block\\\">Total hours: <span>8</span></p>\\n                <small class=\\\"text-muted\\\">as of 6:45 PM</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"report-table collapse\\\" id=\\\"report3\\\" class=\\\"collapse show\\\" data-parent=\\\"#reportStream\\\">\\n            <table id=\\\"doneTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">Worked on</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">Hours</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Fixing the app.run\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                \\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Updating the server, it should prompt if the user or password is wrong (https://u56haxzvke.execute-api.uswest-2.amazonaws.com/dev)\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Making two test endpoints for dynamodb, post and get\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Adding error handling for photo and fields on user validation.\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                    <p>2</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"todoTable\\\">\\n              <thead>\\n                <tr>\\n                  <th width=\\\"80%\\\">To do</th>\\n                  <th width=\\\"10%\\\">Link</th>\\n                  <th width=\\\"10%\\\">&nbsp;</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Responding to another challenge that the aws cognito gave us. (\\\"MFA_SETUP\\\")\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>\\n                    <p class=\\\"report-name\\\">\\n                      Redirecting the user validation to login page when refreshed.\\n                    </p>\\n                  </td>\\n                  <td>\\n                    <a href=\\\"\\\">\\n                      <i class=\\\"fal fa-external-link\\\"></i>\\n                    </a>\\n                  </td>\\n                  <td>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <table id=\\\"issuesTable\\\">\\n              \\n              <tbody>\\n                <tr>\\n                  <p class=\\\"text-muted\\\">No Issues</p>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div> -->\\n      \\n    </div>\\n  </aside>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StandupService } from '../../../commons/services/history/standup.service'\nimport { NavService } from '../../../commons/services/utils/nav.service';\nimport { ProjectService } from '../../../commons/services/project/project.service'\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  userReportList :any = [];\n\n  constructor(\n    private standupservice : StandupService,\n    private nav            : NavService,\n    private projectservice : ProjectService\n  ) \n  { \n    this.nav.setNav('Projects', true);\n  }\n\n  ngOnInit() {\n    // get all the reports of user\n    this.standupservice.getReportList().subscribe(\n      data => {\n        this.userReportList = data;\n      }\n    )\n\n    this.projectservice.getProjects().subscribe(\n      data => {\n        this.projectservice.projects = data\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\">\\n    <span [hidden]=\\\"!form.err\\\">Invalid Email/Password. Please try again.</span>\\n    <div>\\n        <label>Email:</label>\\n        <input formControlName=\\\"email\\\" type=\\\"text\\\">\\n        <span [hidden]=\\\"form.valid('email')\\\">Invalid email format.</span>\\n    </div>\\n    <div>\\n        <label>Password:</label>\\n        <input formControlName=\\\"password\\\" type=\\\"password\\\">\\n        <span [hidden]=\\\"form.valid('password')\\\">Password is required.</span>\\n    </div>\\n    <button type=\\\"submit\\\">Login</button>\\n</form>\\n\\n<a href=\\\"{{ slack.config.authorize_url }}\\\">Login via Slack</a>\"","import { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { Login } from '../../../commons/models/login.models';\nimport { LoginForm } from '../../../commons/forms/login.forms';\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { SlackService } from '../../../commons/services/auth/slack.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private form : LoginForm;\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService,\n    private slack : SlackService\n  ) { }\n\n  ngOnInit() {\n    // load slack config\n    this.slack.getConfig();\n\n    // initialize the form.\n    this.form = new LoginForm(new Login);\n\n    console.log(this.slack.config);\n  }\n\n  onSubmit({ value, valid }: { value: Login, valid: boolean }) {\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.auth.login(value)\n        .then(resp => {\n          this.state.go('dashboard');\n        })\n        .catch(err => {\n          this.form.err = err;\n        })\n      ;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UIRouterModule } from '@uirouter/angular';\n\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UIRouterModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class PublicModule { }\n","import { ContentOnly } from '../../commons/utils/layout.utils';\nimport { Disconnect, SlackAuthRedirect } from '../../commons/utils/security.utils';\n\nimport { LoginComponent } from './login/login.component';\n\n\nexport const PUBLIC_STATES : Object[] = [\n    {\n      name  : 'login',\n      url   : '/login/',\n      views : ContentOnly(LoginComponent)\n    },\n    {\n      name    : 'logout',\n      url     : '/logout/',\n      onEnter : Disconnect\n    },\n    {\n      name    : 'slackauthredirect',\n      url     : '/auth/slack/redirect/:token/',\n      onEnter : SlackAuthRedirect\n    }\n]","module.exports = \"\"","module.exports = \"<ng-template #eventList let-calendarDate=\\\"calendarDate\\\" let-popover=\\\"popover\\\">\\n  <div class=\\\"list-group list-group-flush\\\">\\n    <a href=\\\"\\\" prevdefault \\n      class=\\\"list-group-item list-group-item-action\\\" \\n      *ngFor=\\\"let event of calendarDate.events\\\"\\n      (click)=\\\"openModalForm({ eventInstance: event, eventDate: calendarDate.date }); popover.close();\\\">{{event.title}}</a>\\n  </div>\\n  <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"openModalForm({ eventDate: calendarDate.date }); popover.close();\\\">Create event</button>\\n</ng-template>\\n\\n<ng-template #noEvents let-calendarDate=\\\"calendarDate\\\" let-popover=\\\"popover\\\">\\n  <p class=\\\"lead\\\">No events for this date.</p>\\n  <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"openModalForm({ eventDate: calendarDate.date }); popover.close();\\\">Create event</button>\\n</ng-template>\\n\\n<div class=\\\"monthly-calendar\\\">\\n  <h6 class=\\\"mb-2\\\">Calendar</h6>\\n  <div class=\\\"calendar-header\\\">\\n    <span>S</span>\\n    <span>M</span>\\n    <span>T</span>\\n    <span>W</span>\\n    <span>T</span>\\n    <span>F</span>\\n    <span>S</span>\\n  </div>\\n  <div class=\\\"currentMonth\\\" id=\\\"datesAccordion\\\">\\n    <div class=\\\"weekview\\\" id=\\\"firstWeek\\\">\\n      <span \\n        #datePopover1=\\\"ngbPopover\\\"\\n        *ngFor=\\\"let calendarDate of firstWeek\\\" \\n        [ngClass]=\\\"getDateClass(calendarDate.date)\\\"\\n        [ngbPopover]=\\\"calendarDate.events.length ? eventList : noEvents\\\"\\n        container=\\\"body\\\"\\n        autoClose=\\\"outside\\\"\\n        triggers=\\\"manual\\\"\\n        popoverTitle=\\\"Events\\\"\\n        (click)=\\\"toggleEventForm(datePopover1, calendarDate)\\\">\\n        {{calendarDate.date.getDate()}}\\n        {{calendarDate.events.length ? '!': null}}\\n      </span>\\n    </div>\\n    <div class=\\\"wholeMonth\\\" id=\\\"wholeMonth\\\" aria-lablledby=\\\"firstWeek\\\" data-parent=\\\"#datesAccordion\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n      <div class=\\\"weekview\\\" *ngFor=\\\"let week of weeks.slice(1)\\\">\\n        <span \\n          #datePopover2=\\\"ngbPopover\\\"\\n          *ngFor=\\\"let calendarDate of week\\\" \\n          [ngClass]=\\\"getDateClass(calendarDate.date)\\\"\\n          [ngbPopover]=\\\"calendarDate.events.length ? eventList : noEvents\\\"\\n          container=\\\"body\\\"\\n          autoClose=\\\"outside\\\"\\n          triggers=\\\"manual\\\"\\n          popoverTitle=\\\"Events\\\"\\n          (click)=\\\"toggleEventForm(datePopover2, calendarDate)\\\">\\n          {{calendarDate.date.getDate()}}\\n          {{calendarDate.events.length ? '!': null}}\\n        </span>\\n      </div>\\n    </div>\\n    <a href=\\\"\\\" prevdefault class=\\\"calendar-expander\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" \\n      [attr.aria-expanded]=\\\"!isCollapsed\\\"\\n      aria-controls=\\\"wholeMonth\\\">\\n      <i class=\\\"fal\\\" [ngClass]=\\\"{'fa-angle-double-down': isCollapsed, 'fa-angle-double-up': !isCollapsed}\\\"></i>\\n    </a>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\n\nimport { ServerService } from 'src/app/commons/services/auth/server.service';\nimport { FeedService } from 'src/app/commons/services/utils/feed.service';\nimport { EventFormComponent } from './event-form/event-form.component';\n\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  isCollapsed : boolean;\n  firstWeek   : Array<Date> = [];\n  weeks       : Array<Date> = [];\n\n  private _month          : number;\n  private _year           : number;\n  private _now            : Date;\n  private _calendarEvents : Array<any> = [];\n\n  constructor(\n    private server: ServerService,\n    private feed  : FeedService,\n    private modal : NgbModal\n  ) {\n    this.isCollapsed = true;\n    this._now         = this.server.now;\n    this._month       = this._now.getMonth();\n    this._year        = this._now.getFullYear();\n\n    // Fetch calendar events before any other calendar action.\n    this.feed.getCalendarEvents(String(this._year))\n      .then((events: Array<any>) => {\n        this._calendarEvents  = events;\n        this.firstWeek        = this._firstWeek();\n        this.weeks            = this._weeks();\n      });\n\n  }\n\n  ngOnInit() {\n  }\n\n  private _prevMonthLastDate(): Date {\n    return new Date(this._year, this._month, 0);\n  }\n\n  private _currMonthFirstDate(): Date {\n    return new Date(this._year, this._month, 1);\n  }\n\n  private _currMonthLastDate(): Date {\n    return new Date(this._year, this._month + 1, 0);\n  }\n\n  /**\n   * Get current month's firstweek including prev month's idle dates.\n   */\n  private _firstWeek(): Array<any> {\n    const currMonthFirstDateWeekIdx = this._currMonthFirstDate().getDay();\n    const prevMonth                 = this._month - 1;\n    const prevMonthDatesCount       = currMonthFirstDateWeekIdx;\n    const prevMonthDates            = [];\n\n    // Check if the current month's first date is not monday\n    // If true, push prev month dates to prevMonthDates array.\n    if (currMonthFirstDateWeekIdx !== 0) {\n      _.times(prevMonthDatesCount, (idx) => {\n        const prevMonthDate = this._prevMonthLastDate().getDate() - idx;\n        const dateInstance = new Date(this._year, prevMonth, prevMonthDate);\n        prevMonthDates.push({\n          date: dateInstance,\n          events: this._getDateEvents(dateInstance)\n        });\n      });\n\n      // Reverse the array since we started pushing from\n      // prevMonthLastDate backwards.\n      prevMonthDates.reverse();\n    }\n\n    // Combine prev month dates and current month dates\n    // then return only the first 7 dates as the first week.\n    return [...prevMonthDates, ...this._currMonthDates()].slice(0, 7);\n  }\n\n  /**\n   * Get current month's lastweek including next month's idle dates.\n   */\n  private _lastWeek(): Array<any> {\n    const currMonthLastDateWeekIdx = this._currMonthLastDate().getDay();\n    const nextMonth                = this._month + 1;\n    const nextMonthDatesCount      = 6 - currMonthLastDateWeekIdx;\n    const nextMonthDates           = [];\n\n    // Check if the current month's last date is not saturday\n    // If true, push next month dates to nextMonthDates array.\n    if (currMonthLastDateWeekIdx !== 6) {\n      _.times(nextMonthDatesCount, (idx) => {\n        const nextMonthDate = idx + 1;\n        const dateInstance = new Date(this._year, nextMonth, nextMonthDate);\n        nextMonthDates.push({\n          date: dateInstance,\n          events: this._getDateEvents(dateInstance)\n        });\n      });\n    }\n\n    // Combine next month dates and current month dates\n    // then return only the last 7 dates as the last week.\n    return [...this._currMonthDates(), ...nextMonthDates].slice(this._currMonthDates.length - 6);\n  }\n\n  /**\n   * Get current month's dates not including idle dates.\n   */\n  private _currMonthDates(): Array<any> {\n    const datesCount = this._currMonthLastDate().getDate();\n    const dates      = [];\n\n    // Push current month dates into dates array.\n    _.times(datesCount, (idx) => {\n      const date = idx + 1;\n      const dateInstance = new Date(this._year, this._month, date);\n      dates.push({\n        date: dateInstance,\n        events: this._getDateEvents(dateInstance)\n      });\n    });\n\n    return dates;\n  }\n\n  /**\n   * Get currnent month's dates divided into several weeks\n   * 7 dates per week.\n   */\n  private _weeks(): Array<any> {\n    const prevMonthShownDate = this._firstWeek().filter(date => date.date.getMonth() !== this._month);\n    const nextMonthShownDate = this._lastWeek().filter(date => date.date.getMonth() !== this._month);\n    return _.chunk([\n      ...prevMonthShownDate,\n      ...this._currMonthDates(),\n      ...nextMonthShownDate\n    ], 7);\n  }\n\n  /**\n   * Get events that belongs or triggered to the given `date`.\n   * @param date `Date` instance.\n   */\n  private _getDateEvents(date: Date) {\n    return this._calendarEvents\n      .filter(e => {\n        const { freq_day, freq_mo, freq_week_idx, event_date } = e;\n        const day     = String(date.getDate());\n        const mo      = String(date.getMonth() + 1);\n        const weekIdx = String(date.getDay());\n        const anyVal = '*';\n\n        const once    = event_date === moment(date).format('YYYY-MM-DD');\n        const daily   = freq_day === anyVal && freq_mo === anyVal && freq_week_idx === anyVal;\n        const weekly  = freq_day === anyVal && freq_mo === anyVal && freq_week_idx === weekIdx;\n        const monthly = freq_day === day && freq_mo === anyVal && freq_week_idx === anyVal;\n        const yearly  = freq_day === day && freq_mo === mo && freq_week_idx === anyVal;\n\n        return (once || daily || weekly || monthly || yearly);\n      });\n  }\n\n  /**\n   * @summary Generate object of css classes for a `date`\n   * @param date Insatance of Date;\n   * @description Can be use for ngClass directive\n   */\n  getDateClass(date: Date): {'idleDay': boolean, 'today': boolean} {\n    return {\n      'idleDay': date.getMonth() !== this._month,\n      'today': date.getDate() === this._now.getDate()\n    };\n  }\n\n  toggleEventForm(popover, calendarDate): void {\n    if (popover.isOpen()) {\n      popover.close();\n    } else {\n      popover.open({ calendarDate, popover });\n    }\n  }\n\n  openModalForm({ eventInstance, eventDate }) {\n    const modalRef = this.modal.open(EventFormComponent);\n    // pass `eventDate` and `eventInstance` into `EventFormComponent`\n    modalRef.componentInstance.eventDate = eventDate;\n    modalRef.componentInstance.eventInstance  = eventInstance;\n\n    // Push the added event into `_calendarEvents`\n    modalRef.result\n      .then(({event, action}) => {\n        // update `this._calendarEvents` base on action\n        switch (action) {\n          case 'create':\n            this._calendarEvents.push(event);\n            break;\n          case 'update':\n            const eventIdx = this._calendarEvents.findIndex(e => e.id === event.id);\n            this._calendarEvents[eventIdx] = event;\n            break;\n          case 'delete':\n            this._calendarEvents = this._calendarEvents.filter(e => e.id !== event.id);\n            break;\n        }\n\n        // Update `firstWeek` and `weeks` so we would not need\n        // to refresh the browser\n        this.firstWeek = this._firstWeek();\n        this.weeks     = this._weeks();\n      })\n      // Have to catch dismiss reason to avoid uncaught promise.\n      .catch(reason => {\n        // log modal dismiss reason e.g. ( \"backdrop click\", \"cross click\")\n        console.log('Dismiss reason:', reason);\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Create event for {{formattedEventDate}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('cross click')\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\\n<!-- MODAL BODY -->\\n<div class=\\\"modal-body\\\">\\n  <form [formGroup]=\\\"form.form\\\" class=\\\"form p-3\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Title:</label>\\n          <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" />\\n          <span [hidden]=\\\"form.valid('title')\\\">This field is required.</span>\\n        </div>\\n      </div>  \\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Content:</label>\\n          <input type=\\\"text\\\" formControlName=\\\"content\\\" class=\\\"form-control\\\" />\\n          <span [hidden]=\\\"form.valid('content')\\\">This field is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Participants:</label>\\n            <select formControlName=\\\"participants_id\\\" class=\\\"form-control\\\" multiple>\\n              <option *ngFor=\\\"let user of users\\\" [ngValue]=\\\"user.id\\\">{{user.full_name}}</option>\\n            </select>\\n          <span [hidden]=\\\"form.valid('participants_id')\\\">\\n            This field is required.\\n          </span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Start time:</label>\\n          <input type=\\\"time\\\" formControlName=\\\"start_time\\\" class=\\\"form-control\\\" />\\n          <span [hidden]=\\\"form.valid('start_time')\\\">This field is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>End time:</label>\\n          <input type=\\\"time\\\" formControlName=\\\"end_time\\\" class=\\\"form-control\\\" />\\n          <span [hidden]=\\\"form.valid('end_time')\\\">This field is required.</span>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Frequency:</label>\\n            <select formControlName=\\\"frequency\\\" class=\\\"form-control\\\">\\n              <option [ngValue]=\\\"opt.value\\\" *ngFor=\\\"let opt of getFreqOpts()\\\">{{opt.text}}</option>\\n            </select>\\n            <!-- <input type=\\\"text\\\" formControlName=\\\"frequency\\\" class=\\\"form-control\\\" /> -->\\n            <span [hidden]=\\\"form.valid('frequency')\\\">This field is required.</span>\\n          </div>\\n        </div>\\n    </div>\\n    <button *ngIf=\\\"!eventInstance; else elseTemplate\\\" type=\\\"submit\\\" class=\\\"btn btn-primary px-4\\\" (click)=\\\"onSubmit('create')\\\">Add Event</button>\\n    <ng-template #elseTemplate>      \\n      <button type=\\\"submit\\\" data-action=\\\"update\\\" class=\\\"btn btn-secondary px-4 mr-1\\\" (click)=\\\"onSubmit('update')\\\">Update Event</button>\\n      <button type=\\\"submit\\\" data-action=\\\"delete\\\" class=\\\"btn btn-danger px-4\\\" (click)=\\\"onSubmit('delete')\\\">Delete Event</button>\\n    </ng-template>\\n    \\n  </form>\\n</div>\\n<!-- END MODAL BODY -->\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport * as moment from 'moment';\n\nimport { EventForm } from 'src/app/commons/forms/feed.forms';\nimport { Event } from 'src/app/commons/models/feed.models';\nimport { FeedService } from 'src/app/commons/services/utils/feed.service';\nimport { User } from 'src/app/commons/models/user.models';\nimport { UsersService } from 'src/app/commons/services/users/users.service';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.css']\n})\nexport class EventFormComponent implements OnInit {\n  @Input() eventDate     : Date;\n  @Input() eventInstance : { [key: string]: any };\n\n  users        : Array<User>;\n  private form : EventForm;\n\n  constructor(\n    private feed         : FeedService,\n    private usersService : UsersService,\n    public activeModal: NgbActiveModal\n  ) {\n    this.users = usersService.allUsers;\n  }\n\n  ngOnInit() {\n    this.form = new EventForm(new Event);\n    // Populate form if `this.eventInstance` is available\n    if (this.eventInstance) {\n      let { start_time, end_time, participants } = this.eventInstance;\n      // Get participants_id from participants.\n      const participants_id = participants.map(p => p.id);\n      // Get only the time from `eventInstance.start_time`\n      start_time = start_time.split('T')[1];\n      // Get only the time from `eventInstance.end_time`\n      end_time = end_time.split('T')[1];\n\n      this.form.defaultValue({...this.eventInstance, start_time, end_time, participants_id});\n    } else {\n      this.form.defaultValue({ event_date: this.formattedEventDate, frequency: '' });\n    }\n  }\n\n  /**\n   * Format event date as YYYY-MM-DD\n   */\n  get formattedEventDate() {\n    return moment(this.eventDate).format('YYYY-MM-DD');\n  }\n\n  /**\n   * Generates array of `{ value: string, text: string }`\n   * Used for frequency options on template\n   */\n  getFreqOpts() {\n    const controls    = this.form.form.controls;\n    const startTimeFC = controls['start_time'];\n    const eventDateFC = controls['event_date'];\n\n    const date        = moment(\n      `${eventDateFC.value} ${startTimeFC.value}`\n      , 'YYYY-MM-DD hh:mm:ss')\n      .toDate();\n\n    const freqMin     = date.getMinutes();\n    const freqHr      = date.getHours();\n    const freqDay     = date.getDate();\n    const freqMonth   = date.getMonth() + 1;\n    const freqWeekIdx = date.getDay();\n\n    const daily   = `${freqMin} ${freqHr} * * *`;\n    const weekly  = `${freqMin} ${freqHr} * * ${freqWeekIdx}`;\n    const monthly = `${freqMin} ${freqHr} ${freqDay} * *`;\n    const yearly  = `${freqMin} ${freqHr} ${freqDay} ${freqMonth} *`;\n    const none    = '';\n\n    return [\n      { value: none, text: 'None' },\n      { value: daily, text: 'Daily' },\n      { value: weekly, text: 'Weekly' },\n      { value: monthly, text: 'Monthly' },\n      { value: yearly, text: 'Yearly' }\n    ];\n  }\n\n  onSubmit(action: 'create' | 'update' | 'delete') {\n    // initiate submission of form.\n    this.form.submitted = true;\n    // send the form data to the backend if the value\n    // format are valid.\n    const valid = this.form.form.valid;\n    if (valid) {\n      // this.form.setFrequencyVal();\n      const value = this.form.form.value;\n      // Submit request base on action\n      switch (action) {\n        case 'create':\n          this.feed.addEvent(value).then((event) => {\n            // Pass event into the active modal as result\n            this.activeModal.close({ event, action });\n          });\n          break;\n        case 'update':\n          this.feed.updateEvent(value, this.eventInstance.id).then((event) => {\n            // Pass event into the active modal as result\n            this.activeModal.close({ event, action });\n          });\n          break;\n        case 'delete':\n          this.feed.deleteEvent(value, this.eventInstance.id).then((event) => {\n            // Pass event into the active modal as result\n            this.activeModal.close({ event, action });\n          });\n          break;\n      }\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<aside class=\\\"post-standup\\\">\\n  <i class=\\\"far fa-times close-popup\\\" id=\\\"closePopup\\\"></i>\\n  <div class=\\\"post-standup__header\\\" id=\\\"postStandupOpen\\\">\\n    <span class=\\\"wave shake animate infinite\\\">👋</span>\\n    <p class=\\\"post-standup__title\\\">Standup</p>\\n  </div>\\n  <div class=\\\"post-standup__form--container\\\">\\n    <div class=\\\"form\\\">\\n      <div class=\\\"form-group\\\">\\n        <textarea rows=\\\"1\\\" class=\\\"form__input form-control\\\" placeholder=\\\"What did you do today?\\\"></textarea>\\n        <div class=\\\"form__input__actions\\\" >\\n          <button class=\\\"btn btn-primary\\\">\\n            Add item\\n          </button>\\n          <div class=\\\"form__input__hours\\\">\\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"HH\\\" class=\\\"form__input form-control\\\"> \\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"MM\\\" class=\\\"form__input form-control\\\"> \\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <textarea type=\\\"text\\\" name=\\\"\\\" class=\\\"form__input form-control\\\" placeholder=\\\"What are your plans for tomorrow?\\\" rows=\\\"1\\\"></textarea>\\n        <div class=\\\"form__input__actions\\\" >\\n          <button class=\\\"btn btn-primary\\\">\\n            Add item\\n          </button>\\n          <div class=\\\"form__input__hours\\\">\\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"HH\\\" class=\\\"form__input form-control\\\"> \\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"MM\\\" class=\\\"form__input form-control\\\"> \\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <textarea type=\\\"text\\\" name=\\\"\\\" class=\\\"form__input form-control\\\" placeholder=\\\"Do you have issues/blockers?\\\" rows=\\\"1\\\"></textarea>\\n        <div class=\\\"form__input__actions\\\" >\\n          <button class=\\\"btn btn-primary\\\">\\n            Add item\\n          </button>\\n          <div class=\\\"form__input__hours\\\">\\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"HH\\\" class=\\\"form__input form-control\\\"> \\n            <input type=\\\"number\\\" name=\\\"\\\" placeholder=\\\"MM\\\" class=\\\"form__input form-control\\\"> \\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"text-right\\\">\\n        <button class=\\\"btn-primary btn paragraph px-5 \\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"post-standup__confirmation\\\">\\n    <span class=\\\"tada\\\">🎉</span>\\n    <p class=\\\"confirmation-message\\\">Thank you! Your Standup report has been posted.</p>\\n  </div> -->\\n</aside>\\n\\n\\n<div class=\\\"center-section feed-container\\\">\\n  <section class=\\\"feed-section\\\" *ngIf=\\\"feed.q\\\" (scroll)=\\\"scrollfeed($event)\\\" [scrollTop]='feed.scrollHeight'>\\n    <!-- FEED CARDS -->\\n    <div class=\\\"feed-card card\\\" [ngClass]=\\\"{'announcement-card': item.instance_type === 'event'}\\\" *ngFor=\\\"let item of feed.q\\\">\\n\\n      <div *ngIf=\\\"item.instance_type === 'standup'\\\" class=\\\"card-content--container\\\">\\n          <div class=\\\"d-flex\\\">\\n            <div class=\\\"report-info\\\">\\n              <div class=\\\"d-flex align-items-center justify-content-between mb-3\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                  <a uiSref=\\\"dashboard-report\\\" [uiParams]=\\\"{id: item.instance.id}\\\" class=\\\"project-name\\\">{{ item.instance.project.channel_name }}</a>\\n                  <span class=\\\"badge badge__report\\\">Report</span>\\n                  <span class=\\\"timestamp\\\">{{ item.instance.date_created | date: \\\"MMM d, h:mm a\\\" }}</span>\\n                </div>\\n                 <div class=\\\"feed-summary\\\">\\n                   <p class=\\\"hours badge\\\" [innerHtml]=\\\"item.instance.total_hours | timeformat\\\"></p>\\n                    <!-- <p>{{ item.instance.total_hours }} hours</p> -->\\n                  </div>\\n              </div>\\n               <div class=\\\"report-content\\\">\\n                <small class=\\\"report-type\\\">Done</small>\\n                 <div class=\\\"d-flex\\\">\\n                   <p class=\\\"report-hint\\\">{{ item.instance.done | getornull: \\\"0\\\" }}</p>\\n                   <span *ngIf=\\\"item.instance.done.length > 0\\\" class=\\\"content-count\\\">+{{ item.instance.done.length }}</span>\\n                 </div>\\n               </div>\\n               <div class=\\\"report-content\\\">\\n                <small class=\\\"report-type\\\">Todo</small>\\n                 <div class=\\\"d-flex\\\">\\n                   <p class=\\\"report-hint\\\">{{ item.instance.todo | getornull: \\\"0\\\" }}</p>\\n                   <span *ngIf=\\\"item.instance.done.length > 0\\\" class=\\\"content-count\\\">+{{ item.instance.todo.length }}</span>\\n                 </div>\\n               </div>\\n\\n              \\n              <span *ngIf=\\\"item.instance.blockers.length === 0\\\" class=\\\"no-issue\\\">No Issues</span>\\n              <span *ngIf=\\\"item.instance.blockers.length > 0\\\" class=\\\"with-issues\\\">{{ item.instance.pending_issues }} pending issue{{ item.instance.blockers | pluralize }}</span>\\n            </div>\\n          </div>\\n        <div *ngIf=\\\"item.instance.blockers.length > 0\\\" class=\\\"details pt-2\\\">\\n          <div class=\\\"d-flex justify-content-between\\\">\\n            \\n          </div>\\n          <ol class=\\\"pl-3 details-list\\\">\\n            <li class=\\\"issue-details\\\" [ngClass]=\\\"{'resolved': b.is_fixed, 'unresolved': !b.is_fixed}\\\" *ngFor=\\\"let b of item.instance.blockers\\\">\\n              <p>{{ b.content }}</p>\\n              <a [href]=\\\"b.reference | sanitizeurl\\\" [target]=\\\"_blank\\\"><small>{{ b.reference }}</small></a>\\n            </li>\\n          </ol>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"item.instance_type === 'event'\\\">\\n        <div class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n          <h5 class=\\\"card-title mb-0\\\">{{ item.instance.title }}</h5>\\n          <button class=\\\"btn btn-cta-primary\\\">\\n            <i class=\\\"far fa-calendar mr-1\\\"></i>\\n            Add to Calendar\\n          </button>\\n        </div>\\n        <p>{{ item.instance.content }}</p>\\n        <div class=\\\"d-flex\\\">\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Mentions:</small>\\n            </label>\\n            <div class=\\\"event-participants d-flex\\\">\\n              <div class=\\\"avatar-xs mr-1\\\" *ngFor=\\\"let member of item.instance.participants\\\" [ngStyle]=\\\"{'background-image': 'url(' + member.image + ')'}\\\" title=\\\"{{ member.full_name }}\\\"></div>\\n              <div class=\\\"avatar-xs more\\\" *ngIf=\\\"(item.instance.participants.length - 3) > 0\\\"><span>+</span>{{ item.instance.participants.length - 3 }}</div>\\n            </div>\\n          </div>\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Schedule:</small>\\n            </label>\\n            <p class=\\\"text-strong\\\">{{ item.instance.event_date | date: \\\"EEE, MMM d\\\" }} | {{ item.instance.start_time | date: \\\"h:mm a\\\" }} - {{ item.instance.end_time | date: \\\"h:mm a\\\" }}</p>\\n          </div>\\n          <div class=\\\"mr-4\\\">\\n            <label class=\\\"mb-0\\\">\\n              <small class=\\\"text-muted\\\">Mentions:</small>\\n            </label>\\n            <div class=\\\"avatar-xs\\\" [ngStyle]=\\\"{'background-image': 'url(' + item.instance.organizer.image + ')'}\\\" title=\\\"{{ item.instance.organizer.full_name }}\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- FEED CARDS -->\\n  </section>\\n\\n  <aside class=\\\"stat-pane\\\">\\n    <div class=\\\"calendar\\\">\\n      <div class=\\\"event-container\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n          <span class=\\\"date\\\">{{ server.now | date: \\\"d\\\" }}</span>\\n          <div>\\n            <div class=\\\"d-flex\\\">\\n              <div class=\\\"month\\\">{{ server.now | date: \\\"MMM\\\" }}</div>\\n              <div class=\\\"year\\\">{{ server.now | date: \\\"y\\\" }}</div>\\n            </div>\\n            <div class=\\\"day\\\">{{ server.now | date: \\\"EEEE\\\" }}</div>\\n          </div>\\n          \\n        </div>\\n        \\n        <div class=\\\"notifications\\\">\\n          <div class=\\\"d-flex align-items-center justify-content-between w-100\\\">\\n            <!-- <div>\\n              <p class=\\\"mb-0 text-muted\\\">\\n                <i class=\\\"fas fa-bolt\\\"></i>\\n                Hooray! no notifications for today!\\n              </p>\\n            </div> -->\\n            <a href=\\\"\\\">\\n              <i class=\\\"fal fa-plus\\\"></i>\\n            </a>\\n          </div>\\n\\n          <div class=\\\"stat-pane-item\\\" *ngFor=\\\"let i of feed.nEvents\\\">\\n            <div class=\\\"stat-section-title\\\">\\n              <a href=\\\"\\\">\\n                <i class=\\\"far fa-bell\\\"></i>\\n                <span>{{ i.title }}</span>\\n              </a>\\n              <small class=\\\"text-muted\\\">TODAY, {{ i.start_time | date: \\\"hh:mm a\\\" }}</small>\\n            </div>\\n            <div class=\\\"stat-section-details\\\">\\n              <p>{{ i.content }}</p>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"stat-pane-item\\\" *ngIf=\\\"feed.pendingIssues\\\">\\n            <div class=\\\"stat-section-title\\\">\\n              <a href=\\\"\\\">\\n                <i class=\\\"far fa-times-hexagon\\\"></i>\\n                <span>You have {{ feed.pendingIssues.length }} pending issue{{ feed.pendingIssues | pluralize }}</span>\\n              </a>\\n            </div>\\n\\n            <div class=\\\"stat-section-details\\\">\\n              \\n              <div class=\\\"issue-item\\\" *ngFor=\\\"let issue of feed.pendingIssues\\\">\\n                <div  class=\\\"my-2 d-flex justify-content-between\\\">\\n                  <p class=\\\"project-name\\\">#{{ issue.standup.project.channel_name }}</p>\\n                  <small class=\\\"text-muted\\\">{{ issue.standup.date_created | timeAgo }}</small>\\n                </div>\\n                <a uiSref=\\\"dashboard-report\\\" [uiParams]=\\\"{id: issue.standup.id}\\\">\\n                  {{ issue.content }}\\n                </a>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <!-- CALENDAR -->\\n      <app-calendar></app-calendar>\\n\\n      <div class=\\\"statistics\\\">\\n        <h6 class=\\\"mb-4\\\">Weekly hours</h6>\\n        <div class=\\\"graph\\\">\\n          <div class=\\\"scale\\\">\\n            <div class=\\\"value\\\">8</div>\\n            <div class=\\\"value\\\">6</div>\\n            <div class=\\\"value\\\">4</div>\\n            <div class=\\\"value\\\">2</div>\\n            <div class=\\\"value\\\">0</div>\\n          </div>\\n          <div class=\\\"bars\\\">\\n            <div class=\\\"bar\\\" style=\\\"height:0%\\\"></div>\\n            <div class=\\\"bar short\\\" style=\\\"height:10%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:80%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:100%\\\"></div>\\n            <div class=\\\"bar\\\" style=\\\"height:0%\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"statistics pt-0\\\">\\n        <div class=\\\"d-flex justify-content-between mb-2\\\">\\n          <h6>Login History</h6>\\n          <div class=\\\"legend\\\">\\n            <div class=\\\"am\\\">AM</div>\\n            <div class=\\\"pm\\\">PM</div>\\n          </div>\\n        </div>\\n        <div class=\\\"graph\\\">\\n          <div class=\\\"log-data\\\">\\n            <div class=\\\"date-label\\\">\\n              <span>Sun</span>\\n              <span>Mon</span>\\n              <span>Tue</span>\\n              <span>Wed</span>\\n              <span>Thu</span>\\n              <span>Fri</span>\\n              <span>Sat</span>\\n            </div>\\n            <div class=\\\"time-in time-data\\\">\\n               <span class=\\\"time\\\">- -</span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">- - <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"am\\\"></i></span>\\n               <span class=\\\"time\\\">- -</span>\\n            </div>\\n            <div class=\\\"time-out time-data\\\">\\n               <span class=\\\"time\\\">- -</span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">9:00 <i class=\\\"pm\\\"></i></span>\\n               <span class=\\\"time\\\">- -</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"other-sections\\\">\\n        <div class=\\\"stat-section-title\\\">\\n          <a href=\\\"\\\">\\n            <i class=\\\"far fa-anchor\\\"></i>\\n            <span>You have 2 on going projects</span>\\n          </a>\\n          \\n        </div>\\n        <div class=\\\"stat-pane-item d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"stat-section-details mb-2\\\">\\n            <a href=\\\"\\\" class=\\\"project-name\\\">#cl-Helpdesk</a>\\n          </div>\\n          <small class=\\\"text-muted\\\">456 hours total</small>\\n        </div>\\n        <div class=\\\"stat-pane-item d-flex justify-content-between align-items-center\\\">\\n          <div class=\\\"stat-section-details mb-2\\\">\\n            <a href=\\\"\\\" class=\\\"project-name\\\">#cl-Design</a>\\n          </div>\\n          <small class=\\\"text-muted\\\">45 hours total</small>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </aside>\\n</div>\"","import { Component, OnInit, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { StateService } from '@uirouter/angular';\nimport { NavService } from '../../../commons/services/utils/nav.service';\nimport { FeedService } from '../../../commons/services/utils/feed.service';\nimport { ServerService } from '../../../commons/services/auth/server.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public now = new Date();\n\n  constructor(\n    private nav      : NavService,\n    private feed     : FeedService,\n    private state    : StateService,\n    private server   : ServerService,\n    private ref      : ChangeDetectorRef\n  ) {\n    // nav configuration\n    // TODO: this sucks!. find a better solution\n    this.nav.setNav('Dashboard');\n  }\n\n  ngOnInit() {\n    // reload the feed item list except on\n    // dashboard-report or if the feed list\n    // is empty.\n    if (!this.feed.noreload && this.state.$current.name !== 'dashboard-report') {\n      this.feed.getFeed();\n    } else if (this.state.$current.name === 'dashboard-report' && this.feed.q.length < 1) {\n      this.feed.getFeed();\n    } else {\n      this.feed.noreload = false;\n    }\n\n    // load the notification events data.\n    this.feed.getNotificationEvents();\n    // load the notification pending issues data.\n    this.feed.getNotificationPendingIssues();\n    // load the calendar events data.\n    this.feed.getCalendarEvents();\n  }\n\n  @HostListener('scroll', ['$event']) \n  scrollfeed(event): void {\n    // captures the scroll event on the feed-section.\n    // it handles the call to the backend when the scroll\n    // reach its max height.\n    let cHeight = event.target.scrollHeight;\n    this.feed.scrollHeight = event.target.scrollTop;\n\n    // offset height. this is the sum of the margin/interval\n    // of each element inside the `cHeight`. can change based\n    // on the design template.\n    // margin-height: 708, spacing-height: 100 # spacer so that this\n    // sends a call to the backend before the user reach the last item.\n    let maxHeight = cHeight - (708 + 100);\n    \n    if(this.feed.scrollHeight >= maxHeight) {\n      this.feed.loadMoreFeed();\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<aside class=\\\"side-modal\\\" [ngClass]=\\\"{'open': open}\\\">\\n  <a class=\\\"closeModal\\\">\\n    <i class=\\\"fal fa-times\\\"></i>\\n  </a>\\n  <div class=\\\"report-feed\\\">\\n    <div class=\\\"mb-4\\\">\\n      <div class=\\\"mb-4 d-flex justify-content-between align-items-center\\\">\\n        <div>\\n          <h5 class=\\\"pane-title mb-0\\\">{{ report.date_created | date: \\\"EEEE\\\" }}</h5>\\n          <label class=\\\"text-muted\\\"><small>{{ report.date_created | date: \\\"MMMM dd, y\\\" }}</small></label>\\n        </div>\\n        <a href=\\\"#\\\" class=\\\"\\\">View report summary <i class=\\\"fal fa-long-arrow-right ml-2\\\"></i></a>\\n      </div>\\n      <div class=\\\"d-flex\\\">\\n        <div class=\\\"mr-5\\\">\\n          <h6 class=\\\"mb-0 pane-title\\\">#{{ report.project.channel_name }}</h6>\\n          <label *ngIf=\\\"report.blockers.length === 0\\\"><small>No Issues</small></label>\\n          <label *ngIf=\\\"report.blockers.length > 0\\\" class=\\\"text-danger\\\"><small>{{ report.pending_issues }} Pending Issue{{ report.pending_issues | pluralize }}</small></label>\\n        </div>\\n        <div class=\\\"text-left\\\">\\n          <h6 class=\\\"mb-0 d-block pane-title\\\">Hours:  <span [innerHtml]=\\\"report.total_hours | timeformat\\\"></span></h6>\\n          <label class=\\\" text-muted\\\"><small>as of {{ report.date_created | date: \\\"h:mm a\\\" }}</small></label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"report-table\\\">\\n      <table id=\\\"doneTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">Worked on</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">Hours</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n\\n          <tr *ngFor=\\\"let i of report.done\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }} \\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\" [target]=\\\"_blank\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n              <p>{{ i.hours }}</p>\\n            </td>\\n          </tr>\\n\\n        </tbody>\\n      </table>\\n\\n      <table id=\\\"todoTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">To do</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">&nbsp;</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let i of report.todo\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }}\\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\" [target]=\\\"_blank\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <table id=\\\"issuesTable\\\">\\n        <thead>\\n          <tr>\\n            <th width=\\\"80%\\\">Issues</th>\\n            <th width=\\\"10%\\\">Reference</th>\\n            <th width=\\\"10%\\\">Status</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let i of report.blockers\\\">\\n            <td>\\n              <p class=\\\"report-name\\\">\\n                {{ i.content }}\\n              </p>\\n            </td>\\n            <td>\\n              <a [href]=\\\"i.reference | sanitizeurl\\\" [target]=\\\"_blank\\\">\\n                <i class=\\\"fal fa-external-link\\\"></i>\\n              </a>\\n            </td>\\n            <td>\\n              <span class=\\\"issue-status-mark\\\" [ngClass]=\\\"{'unresolved': !i.is_fixed, 'resolved': i.is_fixed}\\\"></span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</aside>\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { FeedService } from '../../../../commons/services/utils/feed.service';\n\nimport { StandupService } from '../../../../commons/services/history/standup.service';\nimport { Standup } from '../../../../commons/models/history.models';\n\n\n@Component({\n  selector: 'app-side-report',\n  templateUrl: './side-report.component.html',\n  styleUrls: ['./side-report.component.css']\n})\nexport class SideReportComponent implements OnInit {\n  private open = false;\n  private report = new Standup;\n\n  constructor(\n    private state   : StateService,\n    private feed    : FeedService,\n    private history : StandupService\n  ) { }\n\n  ngOnInit() {\n    // setTimout is only used for the animation effect.\n    // this idea is not the best but it works.\n    // IMPORTANT: `this.open` should be set to true otherwise\n    // redirecting to this page will not work\n    setTimeout(()=> { this.open = true; }, 20);\n\n    \n    \n\n    if(this.state.params.cardId){\n      // enable `StateService.noreload` so that the weekly report list\n      // will not reload when this popup is closed.\n      this.history.noreload = true;\n      this.history.getReport(this.state.params.cardId)\n      .subscribe(resp => {\n        this.report = new Standup(resp);\n      });\n    }\n    else{\n      // enable `FeedService.noreload` so that the feedlist\n      // will not reload when this popup is closed.\n      this.feed.noreload = true;\n      this.history.getReport(this.state.params.id)\n      .subscribe(resp => {\n        this.report = new Standup(resp);\n      });\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  close(event): void {\n    // close the side report detail if the mouse\n    // click captured is outside the section.\n    let el = event.target,\n        container = document.querySelector('.side-modal');\n    \n    // note: `this.open` serves as an indicator that the click\n    // event happens after the page is initialize.\n    if (!container.contains(el) && this.open) {\n      this.open = false;\n      // setTimout is only used for the animation effect.\n      // this idea is not the best but it works.\n      if(this.state.params.cardId){\n        setTimeout(()=> { this.state.go('project-detail', {id:this.state.params.id}); }, 300);\n      }\n      else{\n        setTimeout(()=> { this.state.go('dashboard'); }, 300);\n      }\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"center-section profile-settings--page\\\">\\n  <div class=\\\"extend-wrapper row\\\">\\n    <div class=\\\"col-md-7\\\">\\n      <form [formGroup]=\\\"form.form\\\" (ngSubmit)=\\\"onSubmit(form.form)\\\" class=\\\"form\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"profile--picture\\\">\\n              <div class=\\\"avatar-md \\\" [ngStyle]=\\\"{'background-image': 'url(' + auth.user.image + ')'}\\\" data-rjs=\\\"3\\\"></div>\\n              <div class=\\\"d-flex pl-5\\\">\\n                <a href=\\\"\\\" class=\\\"pane-title mr-4\\\">Change Profile Photo</a>\\n                <a href=\\\"\\\" class=\\\"text-danger\\\">Remove</a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"title-bold mb-3\\\">Personal Details</h5>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>First Name:</label>\\n              <input type=\\\"text\\\" formControlName=\\\"first_name\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"form.valid('first_name')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Last Name:</label>\\n              <input type=\\\"text\\\" formControlName=\\\"last_name\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"form.valid('last_name')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Birthdate:</label>\\n              <input type=\\\"date\\\" formControlName=\\\"birthdate\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"form.valid('birthdate')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <h5 class=\\\"title-bold my-3\\\">Employment Details</h5>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Position:</label>\\n              <input type=\\\"text\\\" formControlName=\\\"position\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"form.valid('position')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Position type:</label>\\n              <select class=\\\"form-control\\\">\\n                <option>Trainee</option>\\n                <option>Full-time</option>\\n              </select>\\n              <span [hidden]=\\\"form.valid('position')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Date Started:</label>\\n              <input type=\\\"date\\\" formControlName=\\\"date_started\\\" class=\\\"form-control\\\">\\n              <span [hidden]=\\\"form.valid('date_started')\\\">This field is required.</span>\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary px-4\\\">Save Changes</button>\\n      </form>\\n    </div>\\n    \\n    <div class=\\\"col-md-5\\\">\\n      <div class=\\\"account-details\\\">\\n        <div class=\\\"primary-email\\\">\\n          <i class=\\\"fas fa-exclamation-circle\\\"></i>\\n          <div>\\n            <div class=\\\"\\\">\\n              <p class=\\\"email\\\">{{ form.form.value.email }}</p>\\n              <span class=\\\"badge badge-accent\\\">Primary</span>\\n            </div>\\n            <a href=\\\"\\\" class=\\\"text-highlited\\\">Change</a>\\n          </div>\\n        </div>\\n\\n\\n        <div [ngSwitch]=\\\"switchExpression\\\" class=\\\"password-field\\\">\\n\\n          <!-- CREATE PASSWORD FORM -->\\n\\n          <div *ngSwitchCase=\\\"'create_password'\\\">\\n            <form [formGroup]=\\\"add_password_form.form\\\" (ngSubmit)=\\\"onAddPasswordSubmit(add_password_form.form)\\\">\\n              <span [hidden]=\\\"!add_password_form.err\\\">{{add_password_form.err}}</span>\\n              <div class=\\\"form-group\\\">\\n                <label>New Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"new_password\\\" class=\\\"form-control\\\">\\n                <span [hidden]=\\\"add_password_form.valid('new_password')\\\">This field is required.</span>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"confirm_new_password\\\" class=\\\"form-control\\\">\\n                <span [hidden]=\\\"add_password_form.valid('confirm_new_password')\\\">This field is required.</span>\\n              </div>\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <button (click)=\\\"cancelPasswordEvent()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n                <button class=\\\"btn btn-cta-primary\\\">Save Password</button>\\n              </div>\\n            </form>\\n          </div>\\n\\n\\n          <!-- CHANGE PASSWORD FORM -->\\n\\n          <div *ngSwitchCase=\\\"'change_password'\\\">\\n            <form [formGroup]=\\\"edit_password_form.form\\\" (ngSubmit)=\\\"onEditPasswordSubmit(edit_password_form.form)\\\">\\n              <p>Change Password</p>\\n              <span [hidden]=\\\"!edit_password_form.err\\\">{{edit_password_form.err}}</span>\\n              <div class=\\\"form-group\\\">\\n                <label>Old Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"old_password\\\" class=\\\"form-control\\\">\\n                <span [hidden]=\\\"edit_password_form.valid('old_password')\\\">This field is required.</span>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>New Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"new_password\\\" class=\\\"form-control\\\">\\n                <span [hidden]=\\\"edit_password_form.valid('new_password')\\\">This field is required.</span>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"confirm_new_password\\\" class=\\\"form-control\\\">\\n                <span [hidden]=\\\"edit_password_form.valid('confirm_new_password')\\\">This field is required.</span>\\n              </div>\\n              <div class=\\\"d-flex justify-content-between\\\">\\n                <button (click)=\\\"cancelPasswordEvent()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n                <button class=\\\"btn btn-cta-primary\\\">Update Password</button>\\n              </div>\\n            </form>\\n          </div>\\n\\n\\n          <!-- CHANGE/CREATE PASSWORD -- SUCCESS -->\\n          <div *ngSwitchCase=\\\"'success'\\\">\\n            <p>Congratulations! You’ve successfully updated your password.</p>\\n            <div class=\\\"text-right\\\">\\n              <a href=\\\"\\\" (click)=\\\"changePassClick($event)\\\" class=\\\"text-right text-strong\\\">Change Password</a>\\n            </div>\\n          </div>\\n\\n          <!-- CPASSWORD ALREADY CREATED-->\\n\\n          <div *ngSwitchDefault>\\n            <p *ngIf=\\\"!checkPass\\\">You’re logged in via Slack.<br/>\\n            <span class=\\\"text-highlited\\\">Create a password</span> to sign in using e-mail.</p>\\n          \\n            <div *ngIf=\\\"!checkPass\\\" class=\\\"text-right\\\">\\n              <button (click)=\\\"createPassClick()\\\" class=\\\"btn btn-cta-primary btn-lg\\\">Start Creating</button>\\n            </div>\\n            <!-- CREATE PASSWORD FORM -->\\n\\n            <!-- PASSWORD ALREADY CREATED -->\\n\\n            <p *ngIf=\\\"checkPass\\\">Your password was created on <span class=\\\"text-muted\\\">03/13/2019</span></p>\\n            <div class=\\\"text-right\\\" *ngIf=\\\"checkPass\\\">\\n              <a href=\\\"\\\" (click)=\\\"changePassClick($event)\\\" class=\\\"text-right text-strong\\\">Change Password</a>\\n            </div>\\n            \\n            <!-- CPASSWORD ALREADY CREATED-->\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\"><!--\\n        <div class=\\\"form-group\\\">\\n          <label>Email:</label>\\n          <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n          <span [hidden]=\\\"form.valid('email')\\\">This field is required.</span>\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import * as _ from 'lodash';\n\nimport { Component, OnInit } from '@angular/core';\nimport { StateService } from '@uirouter/angular';\n\nimport { UserForm } from '../../../commons/forms/user.forms';\nimport { User } from '../../../commons/models/user.models';\n\nimport { EditPasswordModel } from '../../../commons/models/edit-password.models'\n\nimport { AddPasswordForm } from '../../../commons/forms/password.forms'\nimport { EditPasswordForm } from '../../../commons/forms/password.forms'\n\nimport { AddPasswordModel } from '../../../commons/models/add-password.models'\n\nimport { AuthService } from '../../../commons/services/auth/auth.service';\nimport { UserService } from '../../../commons/services/auth/user.service';\nimport { NavService } from '../../../commons/services/utils/nav.service';\n\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n  private form : UserForm;\n\n  private edit_password_form : EditPasswordForm;\n  private add_password_form : AddPasswordForm;\n\n  // private edit_password_form : EditPasswordForm\n  // private add_password_form : AddPasswordForm\n  private checkPass:boolean;\n  private switchExpression: string;\n\n\n  constructor(\n    private auth  : AuthService,\n    private state : StateService,\n    private userservice : UserService,\n    private nav : NavService\n  ) {}\n\n  async ngOnInit() {\n    // initialize the form.\n    this.switchExpression = null;\n    this.form = new UserForm(new User);\n\n    this.nav.setNav('Profile', true);\n\n    this.edit_password_form = new EditPasswordForm(new EditPasswordModel);\n    this.add_password_form = new AddPasswordForm(new AddPasswordModel);\n\n    // assign values on the user form.\n    // this uses `await` which will wait\n    // for the request response before proceeding\n    if (this.auth.user.id == null) {\n      // get user information from the backend. (sync)\n      await this.auth.setuser();\n    }\n    this.form.defaultValue(this.auth.user);\n    this.checkPass = this.auth.user.has_usable_pass\n  }\n\n  onSubmit({ value, valid }: { value: User, valid: boolean }) {\n    // initiate submission of form.\n    this.form.submitted = true;\n    // send the form data to the backend if the value\n    // format are valid.\n    if (valid) {\n      this.userservice.update(value)\n        .then(resp => { this.state.go('user-settings'); })\n        .catch(err => { console.log(err); });\n    }\n  }\n\n  onEditPasswordSubmit({value, valid}: {value: EditPasswordModel, valid:boolean}){\n    // initiate submission of form.\n    this.edit_password_form.submitted = true;\n    // send the form data to the backend if the value\n    // format are valid.\n    if(valid){\n      this.userservice.updatePassword(value)\n        // initialize switchExpression to redirect to success view\n        // re initialize edit password form to empty fields\n        .then(resp => { this.switchExpression = 'success'; this.edit_password_form = new EditPasswordForm(new EditPasswordModel); })\n        .catch(err => { this.edit_password_form.err = err.error.non_field_errors; });\n    }\n  }\n\n  onAddPasswordSubmit({value, valid}: {value: AddPasswordModel, valid:boolean}){\n    // initiate submission of form.\n    this.add_password_form.submitted = true;\n    // send the form data to the backend if the value\n    // format are valid.\n    if(valid){  \n      this.userservice.addPassword(value)\n        // initialize switchExpression to redirect to success view\n        // re initialize edit password form to empty fields\n        .then(resp => { this.switchExpression = 'success'; this.add_password_form = new AddPasswordForm(new AddPasswordModel); this.checkPass = true; })\n        .catch(err => { this.add_password_form.err = err.error.non_field_errors; });\n    }\n  }\n\n  changePassClick($event){\n    // prevent href default behavior\n    $event.preventDefault();\n    // initialize switchExpression to redirect to change password form \n    this.switchExpression = 'change_password';\n  }\n\n  cancelPasswordEvent(){\n    // re initialize edit password and add password form to empty fields\n    this.edit_password_form = new EditPasswordForm(new EditPasswordModel);\n    this.add_password_form = new AddPasswordForm(new AddPasswordModel);\n    // initialize switchExpression to redirect to default view\n    this.switchExpression = '';\n  }\n\n  createPassClick(){\n    // initialize switchExpression to redirect to create password form\n    this.switchExpression = 'create_password';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UIRouterModule } from '@uirouter/angular';\nimport { DirectivesModule } from '../../commons/directives/directives.module';\n\nimport { PipesModule } from '../../commons/pipes/pipes.module';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SettingComponent } from './setting/setting.component';\nimport { SideReportComponent } from './dashboard/side-report/side-report.component';\nimport { CalendarComponent } from './dashboard/calendar/calendar.component';\nimport { EventFormComponent } from './dashboard/calendar/event-form/event-form.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbModule,\n    UIRouterModule,\n    DirectivesModule,\n    PipesModule\n  ],\n  declarations: [DashboardComponent, SettingComponent, SideReportComponent, CalendarComponent, EventFormComponent],\n  entryComponents: [EventFormComponent]\n})\nexport class UsersModule { }\n","import { ContentOnly, NavContent, NavSideOpenContent } from '../../commons/utils/layout.utils';\nimport { LoginRequired } from '../../commons/utils/security.utils';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SideReportComponent } from './dashboard/side-report/side-report.component';\nimport { SettingComponent } from './setting/setting.component';\n\n\nexport const USER_STATES : Object[] = [\n  {\n    name    : 'dashboard',\n    url     : '/dashboard/',\n    views   : NavContent(DashboardComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'dashboard-report',\n    url     : '/dashboard/report/:id/',\n    views   : NavSideOpenContent(SideReportComponent, DashboardComponent),\n    onEnter : LoginRequired\n  },\n  {\n    name    : 'user-settings',\n    url     : '/users/settings/',\n    views   : NavContent(SettingComponent),\n    onEnter : LoginRequired\n  }\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}